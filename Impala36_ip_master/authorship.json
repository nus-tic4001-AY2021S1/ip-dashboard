[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.database.Database;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * A Personal Assistant Chatbot that helps a person to keep track of various things."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Impala36"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * @author Wang Zhenquan"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * @version Level 7"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * @since 20/08/2020"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Impala36"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private final Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private final TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private final Database database \u003d new Database(\"duke.txt\", tasks, ui);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private boolean isRepeating \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        ui.printDukeLogo();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        ui.printGreeting();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        database.readDatabase(tasks, ui, database);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        repeatedUserInput();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private void repeatedUserInput() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        while (isRepeating) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            isRepeating \u003d parser.parseInput(in.nextLine(), ui, tasks, database);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 40,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/database/Database.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.database;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Responsible for all interactions between the in-memory tasks and the tasks file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public class Database {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    String fileName;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public Database(String fileName, TaskList tasks, Ui ui) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        this.fileName \u003d fileName;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void updateDatabase(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"./\" + fileName, false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            String line \u003d (i + 1) + \". \" + tasks.get(i).getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            fw.write(line);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void readDatabase(TaskList tasks, Ui ui, Database database) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ArrayList\u003cString\u003e lines \u003d getLines(fileName);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            tasks \u003d extractTasks(lines, tasks, ui, database);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printExistingTasks(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printNoFileFound();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(ui.colorRed(\"IOException encountered: \" + e.getMessage()));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private ArrayList\u003cString\u003e getLines(String fileName) throws FileNotFoundException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        Scanner s \u003d new Scanner(new File(fileName));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        ArrayList\u003cString\u003e list \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            list.add(s.nextLine());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public TaskList extractTasks(ArrayList\u003cString\u003e lines, TaskList tasks, Ui ui, Database database) throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            FileWriter fw \u003d new FileWriter(fileName, true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            String taskStatus \u003d line.split(\"]\")[0].substring(line.indexOf(\"[\") + 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            String taskType \u003d line.split(\"]\")[1].substring(line.indexOf(\"[\") - 1);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            String taskDescription \u003d line.split(\"]\")[2].trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            switch (taskType) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                case \"Todo\" -\u003e {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                    tasks.add(new Todo(\"[Todo]     \" + taskDescription));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                case \"Deadline\" -\u003e {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                    tasks.add(new Deadline(\"[Deadline] \" + taskDescription));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                case \"Event\" -\u003e {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                    tasks.add(new Event(\"[Event]    \" + taskDescription));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (taskStatus.equals(\"\\u2713\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                tasks.get(tasks.size() - 1).setDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 82
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Inherits the Exception class. \u003cp\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Overrides the constructor that takes a String parameter with custom error information"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * when you create a TaskManagerException object.\u003cp\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Throw a new TaskManagerException object when you detect some necessary information"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * is missing in the command. \u003cp\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Catch that exception somewhere else and print the message inside the exception object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public DukeException(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     * @param line The entire user input."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    String getCommandWord(String line) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return line.trim().split(\" \")[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public boolean parseInput(String line, UI ui, TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String command \u003d getCommandWord(line);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String taskDescription \u003d line.substring(line.indexOf(\" \") + 1).trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            case \"list\" -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                ui.printAllTasks(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            case \"done\" -\u003e {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                tasks.setAsCompleted(taskDescription, tasks, ui, database);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            case \"delete\" -\u003e {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                tasks.deleteTask(taskDescription, tasks, ui, database);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            case \"todo\" -\u003e {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                tasks.createTodo(taskDescription, tasks, ui, database);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            case \"deadline\" -\u003e {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                tasks.createDeadline(taskDescription, tasks, ui, database);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            case \"event\" -\u003e {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                tasks.createEvent(taskDescription, tasks, ui, database);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            case \"bye\", \"\" -\u003e {     // also exits when user input is empty"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                ui.printFarewell();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            default -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                ui.printInvalidCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Inherits the Todo class to represent Deadline tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public class Deadline extends Todo {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public Deadline(String input) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String[] split \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 10
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Inherits the Todo class to represent Event tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public class Event extends Todo {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public Event(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String[] split \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 11
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * An abstract class that is inherited by the Todo, Deadline and Event classes."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    String task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    Task(String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        task \u003d input;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    String getTaskStatus(Boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"] \"; //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return getTaskStatus(isDone) + task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 24
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.database.Database;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Responsible for managing all the tasks in the list and displaying error messages to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * This class will use an ArrayList inside it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    void remove(int index) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public boolean isEmpty(String line) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return line.isEmpty();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public String reformatLine(String type, String keyword, String line) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        line \u003d line.replaceFirst(\"/\" + keyword, \"(\" + keyword + \":\").concat(\")\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return type + line;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void setAsCompleted(String line, TaskList tasks, Ui ui, Database database) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                ui.printRedBorderlines(\"It appears that you have no tasks yet, so you can\u0027t complete any!\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Perhaps you should start creating one?\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (isEmpty(line)) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                throw new DukeException(\"You almost typed a proper done command, but you missed out the number!\\n\" +"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Please type in the \u0027done \u003ctask index number\u003e\u0027 format.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            int index \u003d Integer.parseInt(line);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            tasks.get(index - 1).setDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printTaskCompleted(index, tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            database.updateDatabase(tasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(\"I\u0027m sorry, but the list goes numerically.\\nPerhaps you could type a number for the index?\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(\"It appears that you only have \" + tasks.size() + \" task(s) in your list,\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                    \"perhaps you might want to try typing an index number from 1 to \" + tasks.size() + \" instead?\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void createTodo(String line, TaskList tasks, Ui ui, Database database) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (isEmpty(line)) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                throw new DukeException(\"It seems that you missed out the task description!\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Please type in the \u0027todo \u003csomething\u003e\u0027 format.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            line \u003d \"[Todo]     \" + line;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            tasks.add(new Todo(line));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printTaskAdded(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            database.updateDatabase(tasks);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(e.getMessage());"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void createDeadline(String line, TaskList tasks, Ui ui, Database database) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (isEmpty(line) || !line.contains(\"/by\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                throw new DukeException(\"It seems that you\u0027ve missed out the task description or the /by \u003cwhen\u003e segment!\\n\" +"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Please type in the \u0027deadline \u003csomething\u003e /by \u003cwhen\u003e\u0027 format.\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            String[] split \u003d line.split(\"/by\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (isEmpty(split[0]) || isEmpty(split[1])) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                throw new DukeException(\"It seems that you\u0027ve missed out the task description or the /by \u003cwhen\u003e segment!\\n\" +"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Please type in the \u0027deadline \u003csomething\u003e /by \u003cwhen\u003e\u0027 format.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            line \u003d reformatLine(\"[Deadline] \", \"by\", line);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            tasks.add(new Deadline(line));"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printTaskAdded(tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            database.updateDatabase(tasks);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(e.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(\"It seems that you\u0027ve missed out the deadline time!\\n\" +"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                    \"Please type in something for \u003cwhen\u003e after \u0027deadline \u003csomething\u003e /by\u0027.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void createEvent(String line, TaskList tasks, Ui ui, Database database) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (isEmpty(line) || !line.contains(\"/at\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                throw new DukeException(\"It seems that you\u0027ve missed out the task description \" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"or the /at \u003cwhen to when\u003e segment!\\n\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Please type in the \u0027event \u003csomething\u003e /at \u003cwhen to when\u003e\u0027 format.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            String[] split \u003d line.split(\"/at\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (isEmpty(split[0]) || isEmpty(split[1])) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                throw new DukeException(\"It seems that you\u0027ve missed out the task description \" +"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"or the /at \u003cwhen to when\u003e segment!\\n\" +"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Please type in the \u0027event \u003csomething\u003e /at \u003cwhen to when\u003e\u0027 format.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            line \u003d reformatLine(\"[Event]    \", \"at\", line);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            tasks.add(new Deadline(line));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printTaskAdded(tasks);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            database.updateDatabase(tasks);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(e.getMessage());"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(\"It seems that you\u0027ve missed out the event time!\\n\" +"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                    \"Please type in something for \u003cwhen\u003e after \u0027deadline \u003csomething\u003e /by\u0027.\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void deleteTask(String line, TaskList tasks, Ui ui, Database database) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                ui.printRedBorderlines(\"It appears that you have no tasks yet, so you can\u0027t delete any!\\n\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Perhaps you should start creating one?\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            if (isEmpty(line)) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                throw new DukeException(\"You almost typed a proper delete command, but you missed out the number!\\n\" +"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                        \"Please type in the \u0027delete \u003ctask index number\u003e\u0027 format.\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            int index \u003d Integer.parseInt(line);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printTaskRemoved(tasks, index);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            tasks.remove(index);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            database.updateDatabase(tasks);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(e.getMessage());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(\"I\u0027m sorry, but the list goes numerically.\\nPerhaps you could type a number for the index?\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            ui.printRedBorderlines(\"It appears that you only have \" + tasks.size() + \" task(s) in your list,\\n\" +"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                    \"perhaps you might want to try typing an index number from 1 to \" + tasks.size() + \" instead?\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 170
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Inherits the Task class to represent Todo tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public Todo(String input) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 11
    }
  },
  {
    "path": "src/main/java/duke/ui/Style.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Defines the style of graphical content for the whole program."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public enum Style {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    BORDERLINE(\"\\n⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢⬡⬡⬢⬢\\n\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    LOGO(\" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    private final String string;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    Style(String string) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        this.string \u003d string;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public String getString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return string;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 23
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Impala36"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Impala36"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Impala36"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Impala36"
        },
        "content": " * Responsible for displaying all messages and its format to the user except for error-related messages."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Impala36"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     * @return Returns the input string in red color."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public String colorRed(String input) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return \"\\033[31m\" + input + \"\\033[0m\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     * @return Returns the input string in green color."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public String colorGreen(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        return \"\\033[33m\" + input + \"\\033[0m\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     * Prints the input string with borderlines."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printBorderlines(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        System.out.println(Style.BORDERLINE.getString()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + input"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + Style.BORDERLINE.getString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     * Prints the input string with red colored borderlines."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Impala36"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printRedBorderlines(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        System.out.println(colorRed(Style.BORDERLINE.getString())"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + colorRed(Style.BORDERLINE.getString()));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printDukeLogo() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        System.out.println(Style.LOGO.getString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printGreeting() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke.\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"I can help you manage a list of tasks!\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"What you can tell me to do is listed below:\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"  ⬡  Create a Todo task     | \" + colorGreen(\"todo \u003cyour task\u003e\\n\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"  ⬢  Create a Deadline task | \" + colorGreen(\"deadline \u003cyour task\u003e /by \u003cwhen\u003e\\n\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"  ⬡  Create an Event task   | \" + colorGreen(\"event \u003cyour task\u003e /at \u003cwhen to when\u003e\\n\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"  ⬢  Complete a task        | \" + colorGreen(\"done \u003ctask index number\u003e\\n\")"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"  ⬡  Delete a task          | \" + colorGreen(\"delete \u003ctask index number\u003e\\n\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"  ⬡  List down all tasks    | \" + colorGreen(\"list\\n\")"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"  ⬢  Exit my program        | \" + colorGreen(\"bye or hit Enter\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        printBorderlines(greeting);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printFarewell() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String farewell \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        printBorderlines(farewell);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printTaskAdded(TaskList tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String added \u003d \"Great! You have entered a proper task as shown below:\\n\""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + colorGreen(tasks.get(tasks.size() - 1).getDescription()"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"\\nWe now have \" + tasks.size() + \" task(s) in your list!\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        printBorderlines(added);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printTaskRemoved(TaskList tasks, int index) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String added \u003d \"Okay! We have removed the task as shown below:\\n\""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + colorRed(tasks.get(index - 1).getDescription()"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + colorGreen(\"\\nWe now have \" + (tasks.size() - 1) + \" task(s) in your list!\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        printBorderlines(added);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printTaskCompleted(int index, TaskList tasks) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String done \u003d \"Good work there! Now we have:\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"\\033[33mTask [\" + index + \"] \""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + tasks.get(index - 1).getDescription() + \" set as completed!\\033[0m\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        printBorderlines(done);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printAllTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            printBorderlines(\"It appears that you have no tasks! Perhaps you should start creating one?\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String total \u003d \"Here are the tasks that you currently have!\\n\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Impala36"
        },
        "content": "            total \u003d total.concat((i + 1) + \". \" + tasks.get(i).getDescription()) + \"\\n\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        printBorderlines(total);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printInvalidCommand() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        printRedBorderlines(\"It seems that you have typed something out of my unfortunately\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                + \"limited vocabulary. Can you try again?\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Impala36"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printNoFileFound() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String message \u003d \"It looks like it\u0027s your first time as I could not find any existing task file.\\n\" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Impala36"
        },
        "content": "                \"Get started by creating a task!\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    public void printExistingTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        String message \u003d \"An existing task file is found!\";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Impala36"
        },
        "content": "        printAllTasks(tasks);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Impala36"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Impala36"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Impala36": 108
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Impala36"
        },
        "content": "//del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Impala36"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Impala36": 2,
      "-": 19
    }
  }
]
