[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "# duke.duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "skyventus": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Deadline is a class that extends Todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * As Deadline consist of deadline information in this class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * @author olivier cheah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Deadline extends Todo{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return \"D | \" + (super.isDone() ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + deadline + \"\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 26
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.utils.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.utils.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.utils.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TaskList task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Duke (String filePath){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        storage  \u003d new Storage(\"filePath\",\"Duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            task\u003dstorage.load(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            Ui.showToUser(\"---Total number of task loaded: \" + task.getSize());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void run(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String fullCommand \u003d ui.readUserCommand().toLowerCase();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String commandWord \u003d Parser.getCommandWord(fullCommand);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        while(!commandWord.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                switch(commandWord){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    case(\"list\"):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        task.printTasks();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    case(\"done\"):"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        task.setTaskDone(Parser.getTaskIndex(fullCommand));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    case(\"todo\"):"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        task.addTask(Parser.createTodo(Parser.getTodoDescription(fullCommand,commandWord)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    case(\"deadline\"):"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        task.addTask(Parser.createDeadline(Parser.getDescriptionOnly(fullCommand,commandWord, \"/by\")"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                                ,Parser.getDeadline(fullCommand)));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    case(\"event\"):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        task.addTask(Parser.createEvent(Parser.getDescriptionOnly(fullCommand,commandWord, \"/at\")"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                                ,Parser.getEventTiming(fullCommand)));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    case(\"delete\"):"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        task.removeTask(Parser.getDeleteIndex(fullCommand));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    case(\"save\"):"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        storage.save(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    case(\"find\"):"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        task.findTask(Parser.getItemToFind(fullCommand,commandWord));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        Ui.showToUser(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }catch (DukeException e){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            fullCommand \u003d ui.readUserCommand().toLowerCase();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            commandWord \u003d Parser.getCommandWord(fullCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        ui.showByeMessage();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        new Duke(\"data/Duke.txt\").run();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 82
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 11
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Event is a class that extends Todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * As Event consist of event information in this class."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * @author olivier cheah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Event extends Todo {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private String eventInformation;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Event(String description, String event){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.eventInformation \u003d event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return super.toString() + \" (at: \" + eventInformation + \")\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return \"E | \" + (super.isDone() ? \"1\" : \"0\") + \" | \" + super.getDescription() + \" | \" + eventInformation + \"\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 26
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Task is the based class for this Duke and is a abstract class."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * @author Olivier Cheah"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "//    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    //Abstract methods"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public abstract boolean isDone();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public abstract String saveTask();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public abstract void setDone(boolean done);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 30
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.utils.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.utils.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * TaskList is a class that hold a list of tasks and its related function."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * @author Olivier Cheah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        ui.printGotIt();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        ui.showAddedTask(Parser.getTaskType(task), task.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        ui.showTotalNumberTaskAdded(tasks.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void addTaskWithoutMessage(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void printTasks() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        //to keep track of item starting from 1"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        int itemRank \u003d 1;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (tasks.isEmpty())"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.showToUser(\"No tasks has been added to the list yet.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.showTaskWithOrder(Parser.getTaskType(task), task.toString(), itemRank, task.isDone());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            itemRank++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void setTaskDone(int idx) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.printDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            tasks.get(idx - 1).setDone(true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.showDoneTask(Parser.getTaskType(tasks.get(idx - 1)), tasks.get(idx - 1).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new DukeException(\"[ERROR] No task found for the number you want to set done\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public boolean isTaskCompleted(int idx){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return tasks.get(idx - 1).isDone();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void setTaskDoneSliently(int idx) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.printDone();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            tasks.get(idx - 1).setDone(true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new DukeException(\"[ERROR] No task found for the number you want to set done\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void removeTask(int idx) throws DukeException{"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.showDeleteMessage();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.showDeleteTaskDetails(Parser.getTaskType(tasks.get(idx - 1)), tasks.get(idx - 1).toString(), tasks.get(idx - 1).isDone());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            tasks.remove(idx - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.showTotalNumberTaskAdded(tasks.size());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new DukeException(\"[ERROR] No task found for the number you want to set done\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        boolean isEmpty \u003d tasks.isEmpty();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return isEmpty;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String saveTask(int idx){"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String value \u003d tasks.get(idx).saveTask();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        //System.out.println(value);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return value;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void findTask(String keyword){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        int itemRank \u003d 1;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (tasks.isEmpty())"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.showToUser(\"No tasks has been added to the list yet.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            if(Parser.findMatchKeywords(task.getDescription().trim(), keyword)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                ui.showTaskWithOrder(Parser.getTaskType(task), task.toString(), itemRank, task.isDone());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                itemRank++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if(itemRank \u003d\u003d 1){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            ui.showToUser(\"No item matched in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 108
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Todo is a class that extends to task. As it contains the status of the tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * @author Olivier Cheah"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    boolean taskStatus;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Todo(String Desc){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        super(Desc);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        taskStatus\u003dfalse;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return taskStatus;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String saveTask(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return \"T | \" + (taskStatus ? \"1\" : \"0\")+ \" | \" + super.getDescription() + \"\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.taskStatus\u003ddone;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 29
    }
  },
  {
    "path": "src/main/java/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.Todo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * Parser is a class that help to parser needed information into program friendly terms"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * @author olivier cheah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static String getCommandWord(String fullCommand) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String[] task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        fullCommand \u003d fullCommand.toLowerCase().trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            if (task[0].equals(\"todo\"))"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                return \"todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            Ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return task[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static Todo createTodo(String fullCommand) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        Todo task \u003d new Todo(fullCommand.trim());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static Event createEvent(String fullCommand, String at) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        Event event \u003d new Event(fullCommand.trim(), at);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static Deadline createDeadline(String fullCommand, String by) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        Deadline deadline \u003d new Deadline(fullCommand, by);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static String getDescriptionOnly(String fullCommand, String commandWord, String additionalInfo) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String description \u003d fullCommand.substring(0, fullCommand.indexOf(additionalInfo))"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    .replace(commandWord, \"\").trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            if (description.isEmpty())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                throw new DukeException(\"[ERROR] no description found.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new DukeException(\"[ERROR] Missing /at or /by in the command.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static String getTodoDescription(String fullCommand, String commandWord) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String description \u003d fullCommand.replace(commandWord, \"\").trim();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static String getDeadline(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String deadline \u003d fullCommand.substring(fullCommand.indexOf(\"/by\"))"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    .replace(\"/by\", \"\").trim();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            if (deadline.isEmpty())"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                throw new DukeException(\"[ERROR] no description found.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return deadline;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new DukeException(\"[ERROR] Missing /by in the command.\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static String getEventTiming(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            String eventTiming \u003d fullCommand.substring(fullCommand.indexOf(\"/at\"))"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    .replace(\"/at\", \"\").trim();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return eventTiming;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new DukeException(\"[ERROR] Missing /at in the command.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static int getTaskIndex(String fullCommand) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        int idx \u003d Integer.parseInt(fullCommand.replace(\"done\", \"\")"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                .trim());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return idx;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static int getDeleteIndex(String fullCommand) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        int idx \u003d Integer.parseInt(fullCommand.replace(\"delete\", \"\")"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                .trim());"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return idx;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static String getTaskType(Task task) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (task instanceof Deadline)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        else if (task instanceof Event)"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        else"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static String getItemToFind(String fullCommand, String commandWord) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String getItemToFind \u003d fullCommand.replace(commandWord, \"\").trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if (getItemToFind.isEmpty()) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return getItemToFind;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static boolean findMatchKeywords(String description, String keyword){"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String[] splitDescription;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        splitDescription \u003d description.split(\" \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        for (String word: splitDescription) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            if(word.equalsIgnoreCase(keyword))"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 136
    }
  },
  {
    "path": "src/main/java/utils/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Ui myUI \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Storage(String filePath, String filename){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.filename \u003d filename;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        File directory \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if(! directory.exists()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            System.out.println(directory.exists());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public TaskList load(String NewFilepath) throws IOException, DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        //check directory"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        this.filePath\u003dNewFilepath;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String[] task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        int idx \u003d 1;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if(! s.hasNext()){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            System.out.println(\"No tasks to load\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        while(s.hasNext()){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            task \u003d s.nextLine().split(Pattern.quote(\"|\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                if (task[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    tasks.addTaskWithoutMessage(Parser.createTodo(task[2]));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                } else if (task[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": "//                    SimpleDateFormat df \u003d new SimpleDateFormat(\"dd-MM-yyyy\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "skyventus"
        },
        "content": "//                    Date date \u003d df.parse(task[3].trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    tasks.addTaskWithoutMessage(Parser.createDeadline(task[2].trim(), task[3].trim()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                } else if (task[0].trim().equals(\"E\")){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    tasks.addTaskWithoutMessage(Parser.createEvent(task[2].trim(), task[3].trim()));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                if (task[1].contains(\"1\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    tasks.setTaskDoneSliently(idx);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                idx++;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                e.getMessage();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void save(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        FileWriter fw ;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        if(tasks.isEmpty()){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            System.out.println(\"[INFO] No tasks in the file to save\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                    fw.write(tasks.saveTask(i));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                fw.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                myUI.showFileSavedMessage();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                throw new DukeException(e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 91
    }
  },
  {
    "path": "src/main/java/utils/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * UI is a class that create a scanner also showing general message all in one place."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": " * @author olivier cheah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    static String indent \u003d \"    \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    String checkedMark \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    String cross \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static void printWelcome(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent+\"Hello! I\u0027m Duke.Duke\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent+\"What can I do for you?\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static void printError(String message) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static void printDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent + \" Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static void showToUser(String s) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public static void printGotIt(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public String readUserCommand() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.print(\"Your task? \\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void showAddedTask(String classType, String description){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent + \"  [\"+classType+\"][\" + cross  + \"] \" +  description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void showDoneTask(String classType, String description){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent + \"  [\"+classType+\"][\" + checkedMark  + \"] \" +  description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void showTaskWithOrder(String classType, String description, int rank, boolean isDone){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent + rank + \".[\"+classType+\"][\" + (isDone ? checkedMark : cross)  + \"] \" +  description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void showTotalNumberTaskAdded(int totalNumberOfTask){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent + \"Now you have \" + totalNumberOfTask + \" tasks in the list\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent+ \"Bye. Hope to see you again\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void showDeleteMessage(){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "skyventus"
        },
        "content": "            System.out.println(indent + \"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void showDeleteTaskDetails(String classType, String description, boolean isDone){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent + \"  [\"+classType+\"][\" + (isDone ? checkedMark : cross)  + \"] \" +  description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void showFileSavedMessage() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        System.out.println(indent + \"Your file has been saved to data/Duke.txt directory\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 77
    }
  },
  {
    "path": "src/test/java/main/java/duke/TasklistTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.utils.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TasklistTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    String fullCommand \u003d \"todo hello world\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    String commandWord \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TaskList task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void removeTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task.addTask(Parser.createTodo(Parser.getTodoDescription(fullCommand,commandWord)));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task.removeTask(1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertTrue(task.isEmpty());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void getSizeTest() throws DukeException{"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task.addTask(Parser.createTodo(Parser.getTodoDescription(fullCommand,commandWord)));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(1, task.getSize());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 29
    }
  },
  {
    "path": "src/test/java/main/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.utils.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    String fullCommand \u003d \"todo hello world\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    String commandWord \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    private TaskList task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void isDoneTest() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task.addTask(Parser.createTodo(Parser.getTodoDescription(fullCommand,commandWord)));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertFalse(task.isTaskCompleted(1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        task.setTaskDone(1);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertTrue(task.isTaskCompleted(1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 25
    }
  },
  {
    "path": "src/test/java/main/java/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "package main.java.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "skyventus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    String fullCommand \u003d \"todo hello world\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    String commandWord \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void getCommandWordTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "      String actual \u003d Parser.getCommandWord(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "skyventus"
        },
        "content": "      String expected \u003d \"todo\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "      assertEquals(expected, actual);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void getTodoDescriptionTest() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String actual \u003d Parser.getTodoDescription(fullCommand,"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "                commandWord);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        String expected \u003d \"hello world\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "        assertEquals(expected,actual);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    public void findMatchKeywordsTest(){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "skyventus"
        },
        "content": "       assertTrue(Parser.findMatchKeywords(\"Hello World\", \"hello\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "skyventus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "skyventus": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "skyventus"
        },
        "content": "todo add book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "skyventus"
        },
        "content": "deadline return book /by tuesday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "skyventus"
        },
        "content": "event project meeting /at 2pm-5pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "skyventus"
        },
        "content": "todo clear task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "skyventus"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "skyventus"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "skyventus": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "skyventus"
        },
        "content": "REM compile the code into the bin folder (Olivier)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "skyventus"
        },
        "content": "\tPAUSE"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "skyventus"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    echo ********** TESTING **********"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "skyventus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "skyventus"
        },
        "content": "PAUSE"
      }
    ],
    "authorContributionMap": {
      "skyventus": 7,
      "-": 18
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "skyventus"
        },
        "content": "if [ -e \"./ACTUAL-UNIX.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "skyventus"
        },
        "content": "    rm ACTUAL-UNIX.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "skyventus"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred (olivier)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "skyventus"
        },
        "content": "if ! javac -cp ../src/main/* -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "skyventus"
        },
        "content": "java -classpath ../bin duke.duke \u003c input.txt \u003e ACTUAL-UNIX.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "skyventus"
        },
        "content": "dos2unix ACTUAL-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "skyventus"
        },
        "content": "dos2unix EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "skyventus"
        },
        "content": "diff ACTUAL-UNIX.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "skyventus": 8,
      "-": 31
    }
  }
]
