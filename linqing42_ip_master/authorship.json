[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "# Dukes.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Dukes.Duke.java` file, right-click it, and choose `Run Dukes.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "linqing42": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/Dukes/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * deadline task description /by deadline description: add to the task list a deadline task with the given task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * description and with the deadline description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * @inheritDoc"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"D | \" + getFileStatusIcon() + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 29
    }
  },
  {
    "path": "src/main/java/Dukes/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * The Duke program implements an application that can store a list of task,save to a txt file."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * and print the task on the screen."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * it link to other classes which is an member for Duke such as Storage, Task and Ui Class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * @author LIN QING"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * @since 14/9/2020"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private  Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private  Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param path program will store the task in this path"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eDukeException\u003c/code\u003e if problem reading file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Duke(String path)  {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch ( DukeException e ) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            ui.printLoadingError(\"Problem reading file. Starting with an empty task list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * run program implements an application that simply shows the tasks and print on the screen"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return task and the number of task in the list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eDukeException\u003c/code\u003eException if the command word not in the case."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * This is Main method which made use of Duke and run methods"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        public static void main(String[] args){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            assert (args.length) \u003e 0;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 68
    }
  },
  {
    "path": "src/main/java/Dukes/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents an event task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"E | \" + getFileStatusIcon() + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 22
    }
  },
  {
    "path": "src/main/java/Dukes/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a checked exception."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * A \u003ccode\u003eDukeException\u003c/code\u003e object corresponds to an exception that is thrown when user inputs are invalid or"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * have the wrong format."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "linqing42": 11
    }
  },
  {
    "path": "src/main/java/Dukes/Exceptions/FileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a checked exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * A \u003ccode\u003eFileNotFoundException\u003c/code\u003e object corresponds to an exception that is thrown where file are invalid or"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * have some issues."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class FileNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public FileNotFoundException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 14
    }
  },
  {
    "path": "src/main/java/Dukes/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Parser program containing methods that deals with parsing the user command to extract meaningful details from it."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Processes the user input and creates the corresponding commands."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param input Command input by user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return Corresponding command that is input by user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eDukeException\u003c/code\u003eIf a new command cannot be created due to invalid input parameters."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Task taskWord;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        String action \u003d input.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new ListCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                taskWord \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new AddCommand(taskWord);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.isEmpty() || input.length() \u003c 7) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! There is no specific task to delete.\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                int toDelete \u003d Ui.indexDetails(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new DeleteCommand(toDelete);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"please key in correct format.\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                int toEdit \u003d Ui.indexDetails(input);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new DoneCommand(toEdit);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String[] splitDetail \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (splitDetail.length \u003c 2) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"Please specify the deadline time\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String task \u003d splitDetail[0].substring(9);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String by \u003d splitDetail[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                taskWord \u003d new Deadline(task, by);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new AddCommand(taskWord);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String[] splitEvent \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (splitEvent.length \u003c 2) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"Please specify the event time\\n\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String event \u003d splitEvent[0].substring(7);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String time \u003d splitEvent[1];"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                taskWord \u003d new Event(event, time);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new AddCommand(taskWord);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "linqing42"
        },
        "content": "  /*  private static Command list() {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private void addCommandTask(String input) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Task taskWord;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            if (input.startsWith(\"todo\") \u0026\u0026 input.contains(\" \")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                addTask(taskWord);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } else if (input.startsWith(\"deadline\") \u0026\u0026 input.contains(\" \")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String[] splitDetail \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (splitDetail.length \u003c 2) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"Please specify the deadline time\\n\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String task \u003d splitDetail[0];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String by \u003d splitDetail[1];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                taskWord \u003d new Deadline(task, by);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                //taskWord \u003d new Deadline(task, Deadline.timeChange(by));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                addTaskCase(taskWord);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } else if (input.startsWith(\"event\") \u0026\u0026 input.contains(\" \")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String[] splitEvent \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (splitEvent.length \u003c 2) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"Please specify the event time\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String event \u003d splitEvent[0];"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String time \u003d splitEvent[1];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                taskWord \u003d new Event(event, time);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                addTaskCase(taskWord);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } else if(input.startsWith(\"delete\") \u0026\u0026 input.contains(\" \")){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if(tasks.isEmpty() || input.length() \u003c 7) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! There is no specific task to delete.\\n\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                int toDelete \u003d Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1)) - 1;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                Task task \u003d tasks.getTask(toDelete);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                tasks.deleteTask(toDelete);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                System.out.println(\"Noted, I\u0027ve removed the following task:\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + \"  \""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + task"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + \"Now you have \""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + tasks.getSize()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + \" tasks in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } else if (input.startsWith(\"done\") \u0026\u0026 input.contains(\" \")) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"please key in correct format.\\n\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                else if(tasks.isEmpty()){"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"There is no task need to be done\\n\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                int toEdit \u003d Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1)) - 1;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                Task task \u003d tasks.getTask(toEdit);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                task.setDone();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                System.out.println(\"     Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + task"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + \"\\n\""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        + \"___________________________________________________________________\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }catch (DukeException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.print(e.getMessage());"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            assert false : \"Uncaught exception\";"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(\"Please input a date in this format : dd/MM/yy HHmm\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}*/"
      }
    ],
    "authorContributionMap": {
      "linqing42": 173
    }
  },
  {
    "path": "src/main/java/Dukes/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a storage in the hard disk."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private ArrayList\u003cString\u003e details \u003d new ArrayList\u003cString\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public static String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws Dukes.Exceptions.FileNotFoundException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            Scanner in \u003d new Scanner(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            while (in.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String[] strArr \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                Task tasks \u003d null;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (strArr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    tasks \u003d new ToDo(strArr[2]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                } else if (strArr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    tasks \u003d new Deadline(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                } else if (strArr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    tasks \u003d new Event(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new Dukes.Exceptions.FileNotFoundException(\"Previous Tasks are corrupted. Please resetting your task . .\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    tasks.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                details.add(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(\"You have no task.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(\"Problem occurred while creating a new file in Storage\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            assert (false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void saveTaskFile(ArrayList\u003cTask\u003e task) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            String fileDetails \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            for (Task t : task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                fileDetails +\u003d t.toWriteFile() + \"\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            fw.write(fileDetails);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(\"FileWriting got problem\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 68
    }
  },
  {
    "path": "src/main/java/Dukes/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Parent class of all other types of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task to be added to a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Constructor for \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Returns a tick icon if the task is completed and return a X icon if otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return Icon to indicate status of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String getFileStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"T | \" + getFileStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 49
    }
  },
  {
    "path": "src/main/java/Dukes/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create a TaskList to store Task objects."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e load) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 27
    }
  },
  {
    "path": "src/main/java/Dukes/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * An \u003ccode\u003eTodo\u003c/code\u003eobject corresponds to a type of \u003ccode\u003eTask\u003ccode\u003e object with a task to be completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"T | \" + getFileStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 25
    }
  },
  {
    "path": "src/main/java/Dukes/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create a UI class to manage user interface for users and handles interaction between the user"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Reads user input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the Duke logo and greets the user for the first time the program is run."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the bye message and the list that will be save in hard disk when the user exits the program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void showExitMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Your following tasks will be save: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the error when the information in storage could not be loaded."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printLoadingError(String s) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public static int indexDetails(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        int number \u003d Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1)) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the message to inform user of a successful addition of a task to the list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param task Task that has been added."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param numberOfTasks Number of tasks currently in the list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printAddedMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    } /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the message to inform user of a successful deletion."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param task Task that has been deleted."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param numberOfTasks Number of tasks left in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printDeleteMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + task);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the message to inform user that a task has been successfully marked as done."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param task Task that has been marked as done."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + task);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 91
    }
  },
  {
    "path": "src/main/java/Dukes/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create an AddCommand. It adds tasks to user\u0027s list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Adds a single task to user\u0027s list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        tasks.list.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ui.printAddedMessage(task, tasks.list.size());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 27
    }
  },
  {
    "path": "src/main/java/Dukes/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Parent class of all other types of commands to perform some action."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Checks if this object is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return Whether this command is an exit command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 27
    }
  },
  {
    "path": "src/main/java/Dukes/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create a DeleteCommand. It removes user\u0027s task from the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public DeleteCommand (int index){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super.index \u003dindex;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Adds a delete task to user\u0027s list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws DukeException If user key in a number that is not in the TaskList."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            Task deletedTask \u003d tasks.list.remove(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            ui.printDeleteMessage(deletedTask, tasks.list.size());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            throw new DukeException(\"Please key in a number from the list\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 33
    }
  },
  {
    "path": "src/main/java/Dukes/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to a command to mark a \u003ccode\u003eTaskList\u003c/code\u003e object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Constructor for \u003ccode\u003eDoneCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param index Index of object that is to be marked as done in a TaskList object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Adds a done task to user\u0027s list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eDukeException\u003c/code\u003e If user key in a number that is not in the TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            Task doneTask \u003d tasks.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            ui.printDoneMessage(doneTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            throw new DukeException(\"Please key in a number from the list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 39
    }
  },
  {
    "path": "src/main/java/Dukes/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create an ExitCommand. It ends and exit the programme and stores user\u0027s tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Saves the tasks into storage and ends the programme."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)  {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ui.showExitMessage(tasks.list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        storage.saveTaskFile(tasks.list);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Checks if this object is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return Whether this command is an exit command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 30
    }
  },
  {
    "path": "src/main/java/Dukes/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create a ListCommand. It lists all tasks for users."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Constructor for \u003ccode\u003eListCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * print commands detail into the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eIndexOutOfBoundsException\u003c/code\u003e if there is empty list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            if(!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.list.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    System.out.println(\"    \" + (i + 1) + \".\" + tasks.list.get(i));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } else{"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                System.out.println(\"There are no tasks in your list\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.print(\"current task is empty in your list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 38
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "linqing42": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "linqing42": 1,
      "-": 20
    }
  }
]
