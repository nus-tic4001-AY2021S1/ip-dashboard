[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "# Dukes.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Dukes.Duke.java` file, right-click it, and choose `Run Dukes.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "linqing42": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "D | 0 | return book  | 12 Nov 2019, 06:00 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "E | 0 | join club  | 11 Feb 2020, 01:00 PM"
      }
    ],
    "authorContributionMap": {
      "linqing42": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Dukes Project is a program that helps forgetful user to remember things and finish the task before the deadline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Quick start "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. Download the IntelliJ"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. Set up the correct JDK version as follows:"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. Download the latest project from Github: [links](https://github.com/linqing42/ip)."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. Import the project into Intellij."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. Go to the sr folder and find src\\main\\java\\Dukes\\Duke"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. Right click the Duke and select Run Duke"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "1. The program now should run on the Console (usually located at the bottom side)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Adding a task: todo"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Adding a task in the task list and show the total number of task in the list. Therefore, the user know the task that he need to do."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### `todo` - Adding a task into a task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe keyword \u0027todo\u0027 with description can be **upper and lowercase letters** and its outcome will not include the keyword."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you key in the keyword without description. There will be an error message:\"☹ OOPS!!! The description of a todo cannot be empty. \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: todo Description"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: TOdo Read BOOK"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e[T][X] Read BOOK"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eNow you have [index number] task in the list."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 2 "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Adding a deadline task: deadline"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Adding a deadline task helps to know the deadline for the specific task in the task list and show the total number of task in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### `deadline` - Adding a deadline task"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe keyword \u0027deadline\u0027 with description can be **upper and lowercase letters**."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe outcome will not include the keyword with date and time format: dd MMM yyyy, hh:mm a"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you key in the keyword without description. There will be an error message:\"☹ OOPS!!! The description of a deadline cannot be empty.\" "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you missing the date and time or /by, there will be an reminder message:\"Please specify the deadline date and time.\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: deadline  Description /by dd/mm/yyyy HHmm"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: deadline return book /by 12/12/2019 1800"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e[D][X] return book (by:12 Dec 2019, 06:00 PM)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eNow you have [index number] task in the list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 3 "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Adding an event task: event"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Adding an event task helps to remember to join or complete the event with specific date and time in the task list and show the total number of task in the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### `event` - Adding an event task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe keyword \u0027event\u0027 with description can be **upper and lowercase letters**."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe outcome will not include the keyword with date adn time format: dd MMM yyyy, hh:mm a"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you key in the keyword without description. There will be an error message:\"☹ OOPS!!! The description of a event cannot be empty.\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you missing the date and time or /by, there will be an reminder message:\"Please specify the event date and time.\""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: event  Description /by dd/mm/yyyy HHmm"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: EVENT join club /at 12/11/2019 0900"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eGot it. I\u0027ve added this task: "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e[E][X] join club (at:12 Nov 2019, 09:00 AM)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eNow you have [index number] task in the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 4 "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Marking a specific task: done"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Marking a specific task to remind the user that he has finished the task."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### `done` - Marking a specific task from the task list."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe keyword \u0027done\u0027 can be **upper and lowercase letters** "
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe outcome will be change the X to ✓ in the specific task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe index refers to the index number shown in the displayed task list and the index **must be positive integer** 1,2,3..."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you key in the keyword without INDEX. There will be an error message:\"please key in correct format.\" "
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: done INDEX"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003estep 1: TODO READ BOOK"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003estep 2: Done 1 or DONE 1 or done 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eNice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e[T][✓] READ BOOK"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 5"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Deleting a task: delete"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Delete a specific task from task list to helps remove the completed task and tidy the task list. It will show the total number of tasks left in the task list. "
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### `delete` - Deleting a specific task from the task list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe keyword \u0027delete\u0027 can be **upper and lowercase letters** and its outcome will be remove the specific task and reduce the total number of task in the list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe index refers to the index number shown in the displayed task list and the index **must be a positive integer** 1,2,3..."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you key in the keyword without INDEX. There will be an error message:\"☹ OOPS!!! There is no specific task to delete.\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: delete INDEX"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003estep 1.TODO READ BOOK"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003estep 2: done 1"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003esteps 3:Delete 1 or DELETE 1 or delete 1"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eNoted. I\u0027ve removed this task: "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e[T][✓] READ BOOK"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003eNow you have [INDEX-1] task in the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 6"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Listing all tasks: list"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "linqing42"
        },
        "content": "It shows a list of all task in the task list with a number. it helps to summarize the task list."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### `list` - Listing all tasks with number."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe keyword \u0027list\u0027 can be **upper and lowercase letters** and its outcome will be show a list of task in the task list"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you key in the keyword with empty task.There will be an error message:\"☹ OOPS!!! There are no tasks in your list.\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: list"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003estep 1.TODO READ BOOK"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003estep 2. list or List or LIST"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eHere are the tasks in your list:"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003e1.[T][X] READ BOOK"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    "
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 7"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Locating tasks by description_keyword: find"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "linqing42"
        },
        "content": "It helps to search a task that contain any of the given description_keyword, and the search is case-insensitive. e.g book will match BOOK. Therefore, the user can easily find out the specific task base on find function."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### `find` - Locating tasks with given description_keyword"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe keyword \u0027find\u0027 can be **upper and lowercase letters** and its outcome will be show a list of task in the task list when the task is match the specific description keywords."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eThe order of the description_keyword does not matter."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you key in the specific description keyword that does not match the task in your list.There will be an error message:\"☹ OOPS!!! There is no matching tasks in your list.\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "linqing42"
        },
        "content": "\u003cbr/\u003e\u003eIf you only key in the **keyword**, there will be an error message:\"☹ OOPS!!! The description of a find cannot be empty.\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: find description_keyword[more_keyword]"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 1.TODO READ BOOK"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 2. todo join club"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 3. find book or Find BOok or FIND BOOK"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eHere are the matching tasks in your list:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003e1.[T][X] READ BOOK"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 8"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Exiting the program: exit/bye"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "linqing42"
        },
        "content": "It helps to end the program and display the list of a task will be save in the hard disk."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### `exit/bye` - Exiting the program "
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eThe keyword \u0027exit/by\u0027 can be **upper and lowercase letters** and its outcome will be show a list of task in the task list that will be save in hard disk and a bye message."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: exit "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Format**: bye"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 1.TODO READ BOOK"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 2. todo join club"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 3. bye/exit/BYE/EXIT/Bye/Exit"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eYour following tasks will be save: "
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003e[T][X] READ BOOK"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003e[T][X] join club"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eBye. Hope to see you again soon!"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 9"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Saving the task in the hard-disk"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "linqing42"
        },
        "content": "It helps to save the tasks in the hard disk automatically after exiting the program, and the format of display will be change when task save in hard disk. It saves the user\u0027s time as there is no need to save manually."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 1.todo read book"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 2. deadline return book /by 12/11/2019 1800"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 3. event join club /at 11/2/2020 1300"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 4. done 1"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003estep 5. bye"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**: save into /data/duke.txt"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eT | 1 | read book"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eD | 0 | return book  | 12 Nov 2019, 06:00 PM"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eE | 0 | join club  | 11 Feb 2020, 01:00 PM"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "linqing42"
        },
        "content": "### Feature 10"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Exceptions message"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "linqing42"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "linqing42"
        },
        "content": "It helps to handle error message that will guid the user."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Example of usage**: "
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003eread book"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "linqing42"
        },
        "content": "**Expected outcome**:"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "linqing42"
        },
        "content": "   \u003cbr/\u003e☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-("
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "linqing42"
        },
        "content": "###### Command Summary"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Action | Format | Examples"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "linqing42"
        },
        "content": "-------| -------| -----"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Todo | todo Description | todo read book"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Deadline | deadline Description /by dd/mm/yyyy HHmm | deadline return book /by 12/12/2019 1800"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Event | event Description /at dd/mm/yyyy HHmm | event join club /by 11/1/2019 1300"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Done | done INDEX | done 1"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Delete | delete INDEX | delete 1"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "linqing42"
        },
        "content": "List | list"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Find | find description_keyword[more_keywords] | find book"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Exit | exit"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "linqing42"
        },
        "content": "Bye | bye"
      }
    ],
    "authorContributionMap": {
      "linqing42": 216,
      "-": 14
    }
  },
  {
    "path": "src/main/java/Dukes/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * The Duke program implements an application that can store a list of task,save to a txt file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * and print the task on the screen."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * it link to other classes which is an member for Duke such as Storage, Task and Ui Class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": " *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * @author LIN QING"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * @since 14/9/2020"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private  Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param path program will store the task in this path"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eDukeException\u003c/code\u003e if problem reading file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Duke(String path)  {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch ( DukeException e ) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            ui.printLoadingError(\"Problem reading file. Starting with an empty task list.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * run program implements an application that simply shows the tasks and print on the screen"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return task and the number of task in the list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eDukeException\u003c/code\u003eException if the command word not in the case."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * This is main method which made use of Duke and run methods"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        public static void main(String[] args){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            assert (args.length) \u003e 0;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 71
    }
  },
  {
    "path": "src/main/java/Dukes/Exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a checked exception."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * A \u003ccode\u003eDukeException\u003c/code\u003e object corresponds to an exception that is thrown when user inputs are invalid or"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * have the wrong format."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        public DukeException(String message) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            super(message);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "linqing42": 11
    }
  },
  {
    "path": "src/main/java/Dukes/Exceptions/FileNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a checked exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * A \u003ccode\u003eFileNotFoundException\u003c/code\u003e object corresponds to an exception that is thrown where file are invalid or"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * have some issues."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class FileNotFoundException extends DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public FileNotFoundException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 14
    }
  },
  {
    "path": "src/main/java/Dukes/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * deadline task description /by specific date and time  e.g. return book by 12/12/2019 1800."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.by\u003d by;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + by  + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"D | \" + getFileStatusIcon() + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 31
    }
  },
  {
    "path": "src/main/java/Dukes/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents an event task that start at a specific date and time. eg. event join team /at 12/12/2019 1800."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"E | \" + getFileStatusIcon() + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 23
    }
  },
  {
    "path": "src/main/java/Dukes/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a Task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Parent class of all other types of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task to be added to a \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Constructor for \u003ccode\u003eTask\u003c/code\u003e."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Returns a tick icon if the task is completed and return a X icon if otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return Icon to indicate status of the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return (isDone ? \"✓\" : \"X\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String getFileStatusIcon() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return (isDone ? \"1\" : \"0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Sets the task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Task markAsDone() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Get the description of the task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return the description of the task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"T | \" + getFileStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 57
    }
  },
  {
    "path": "src/main/java/Dukes/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create a TaskList to store Task objects."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public ArrayList\u003cTask\u003e list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e load) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 29
    }
  },
  {
    "path": "src/main/java/Dukes/Tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * An \u003ccode\u003eToDo\u003c/code\u003eobject corresponds to a type of \u003ccode\u003eTask\u003ccode\u003e object with a task to be completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public String toWriteFile() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return \"T | \" + getFileStatusIcon() + \" | \" + description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 25
    }
  },
  {
    "path": "src/main/java/Dukes/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create a UI class to manage user interface for users and handles interaction between the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Reads user input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return User input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    String readCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the Duke logo and greets the user for the first time the program is run."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\nWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the bye message and the list that will be save in hard disk when the user exits the program."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void showExitMessage(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Your following tasks will be save: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(t);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the error when the information in storage could not be loaded."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printLoadingError(String s) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public static int indexDetails(String input) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        int number \u003d Integer.parseInt(input.substring(input.indexOf(\u0027 \u0027) + 1)) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return number;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the message to inform user of a successful addition of a task to the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param task Task that has been added."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param numberOfTasks Number of tasks currently in the list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printAddedMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + task);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    } /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the message to inform user of a successful deletion."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param task Task that has been deleted."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param numberOfTasks Number of tasks left in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printDeleteMessage(Task task, int numberOfTasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Now you have \" + numberOfTasks + (numberOfTasks \u003d\u003d 1 ? \" task\" : \" tasks\") + \" in the list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Prints the message to inform user that a task has been successfully marked as done."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param task Task that has been marked as done."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                + task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 95
    }
  },
  {
    "path": "src/main/java/Dukes/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create an AddCommand. It will add a Deadline, Event, todo task to the user list and save it."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Adds a Deadline/ Event/ Todo task to the task list and save the list to disk and display to user"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *  @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files,temporary save and store in hard disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        tasks.list.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ui.printAddedMessage(task, tasks.list.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 26
    }
  },
  {
    "path": "src/main/java/Dukes/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Parent class of all other types of commands to perform some action."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    protected String keyWord;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Checks if this object is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return Whether this command is an exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 29
    }
  },
  {
    "path": "src/main/java/Dukes/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create a DeleteCommand. It removes user\u0027s task from the list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super.index \u003d index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Adds a delete task from list with a specific index if index is valid, save the task to user\u0027s list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks   TaskList to be appended."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui      UI to interact with user."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws DukeException If user key in a number that is not in the TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            Task deletedTask \u003d tasks.list.remove(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            ui.printDeleteMessage(deletedTask, tasks.list.size());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            throw new DukeException(\"Please key in a number from the list\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 33
    }
  },
  {
    "path": "src/main/java/Dukes/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a done command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to a command to mark a \u003ccode\u003eTaskList\u003c/code\u003e object"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * in a \u003ccode\u003eTaskList\u003c/code\u003e as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Constructor for \u003ccode\u003eDoneCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param index Index of object that is to be marked as done in a TaskList object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Mark a task in the task list as done if specified index is valid, save the task list and display to user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eDukeException\u003c/code\u003e If user key in a number that is not in the TaskList."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            Task doneTask \u003d tasks.list.get(index).markAsDone();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            ui.printDoneMessage(doneTask);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            throw new DukeException(\"Please key in a number from the list\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 39
    }
  },
  {
    "path": "src/main/java/Dukes/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create an ExitCommand. It ends and exit the programme and stores user\u0027s tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Saves the tasks into storage and display bye message to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *  @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage)  {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ui.showExitMessage(tasks.list);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        storage.saveTaskFile(tasks.list);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Checks if this object is an \u003ccode\u003eExitCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return Whether this command is an exit command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 29
    }
  },
  {
    "path": "src/main/java/Dukes/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Creates a FindCommand. It search for tasks when given keyword."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Finds the tasks with the given keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks   TaskList to be appended."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui      UI to interact with user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            for (Task task : tasks.list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String description \u003d task.getDescription().toLowerCase();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (description.contains(keyWord)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    filteredTasks.list.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    count +\u003d 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (count \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! There is no matching task in the list\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    for (int i \u003d 0; i \u003c filteredTasks.list.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                        System.out.println((i + 1) + \".\" + filteredTasks.list.get(i));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.print(\"Current task is empty in your list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 52
    }
  },
  {
    "path": "src/main/java/Dukes/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Create a ListCommand. It lists all tasks for users."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Constructor for \u003ccode\u003eListCommand\u003c/code\u003e."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * List all the tasks in the task list that was saved on the disk, and display to user"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param tasks TaskList to be appended."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param ui UI to interact with user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param storage Storage to read and write files and temporary store in hard disk."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eIndexOutOfBoundsException\u003c/code\u003e if there is empty list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            int count \u003dtasks.list.size();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            if(count \u003d\u003d0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                System.out.println(\"☹ OOPS!!! There are no tasks in your list.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }else{"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.list.size(); i++) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    System.out.println(\"    \" + (i + 1) + \".\" + tasks.list.get(i));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.print(\"current task is empty in your list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 39
    }
  },
  {
    "path": "src/main/java/Dukes/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Parser program containing methods that deals with parsing the user command to extract meaningful details from it."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * Processes the user input and creates the corresponding commands."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @param input Command input by user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @return Corresponding command that is input by user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     * @throws \u003ccode\u003eDukeException\u003c/code\u003eIf a new command cannot be created due to invalid input parameters."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Task taskWord;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        String keyword;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Command c \u003d null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        String action \u003d input.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat(\"dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"dd MMM yyyy, hh:mm a\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        switch (action) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                taskWord \u003d new ToDo(input.substring(5));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new AddCommand(taskWord);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.isEmpty() || input.length() \u003c 7) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! There is no specific task to delete.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                int toDelete \u003d Ui.indexDetails(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new DeleteCommand(toDelete);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"please key in correct format.\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                int toEdit \u003d Ui.indexDetails(input);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new DoneCommand(toEdit);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String[] splitDetail \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (splitDetail.length \u003c 2) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"Please specify the deadline date and time\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String task \u003d splitDetail[0].substring(9);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String by \u003d splitDetail[1];"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    Date byDeadline \u003d format.parse(by);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    taskWord \u003d new Deadline(task, formatter.format(byDeadline));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }catch (Exception e){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"Please input a date in this format : dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new AddCommand(taskWord);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String[] splitEvent \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (splitEvent.length \u003c 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"Please specify the event date and time\\n\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String event \u003d splitEvent[0].substring(6);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String time \u003d splitEvent[1];"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    Date timeEvent \u003d format.parse(time);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    taskWord \u003d new Event(event, formatter.format(timeEvent));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }catch(Exception e){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"Please input a date in this format : dd/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new AddCommand(taskWord);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"☹ OOPS!!! The description of a find cannot be empty.\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    keyword \u003d input.substring(5).toLowerCase();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    c \u003d new FindCommand(keyword);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new DukeException(\"please key in correct format\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                c \u003d new ExitCommand();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return c;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 125
    }
  },
  {
    "path": "src/main/java/Dukes/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": " * Represents a storage in the hard disk."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    private ArrayList\u003cString\u003e details \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public static String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws Dukes.Exceptions.FileNotFoundException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            Scanner in \u003d new Scanner(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            while (in.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                String[] strArr \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                Task tasks \u003d null;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (strArr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    tasks \u003d new ToDo(strArr[2]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                } else if (strArr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    tasks \u003d new Deadline(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                } else if (strArr[0].equals(\"E\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    tasks \u003d new Event(strArr[2], strArr[3]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    throw new Dukes.Exceptions.FileNotFoundException(\"Previous Tasks are corrupted. Please resetting your task . .\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                if (strArr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                    tasks.markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                details.add(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(\"You have no task.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(\"Problem occurred while creating a new file in Storage\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            assert (false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        return details;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void saveTaskFile(ArrayList\u003cTask\u003e task) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"data/duke.txt\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            String fileDetails \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            for (Task t : task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "linqing42"
        },
        "content": "                fileDetails +\u003d t.toWriteFile() + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            fw.write(fileDetails);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            System.out.println(\"FileWriting got problem\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 72
    }
  },
  {
    "path": "src/test/Dukes/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 12
    }
  },
  {
    "path": "src/test/Dukes/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void parseExit() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Parser exit \u003d new Parser();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            command \u003d Parser.parse(\"exit\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            assertTrue(command instanceof ExitCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            fail(\"Should not shown thrown Exception.\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void parseBye() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Parser bye \u003d new Parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        Command command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            command \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            assertTrue(command instanceof ExitCommand);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "linqing42"
        },
        "content": "            fail(\"Should not shown thrown Exception.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "linqing42": 34
    }
  },
  {
    "path": "src/test/Dukes/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "package Dukes;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import Dukes.Tasks.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "linqing42"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    public void ToDoTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        ToDo todo \u003d new ToDo(\"return book\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        assertEquals(\"[T][X] return book\", todo.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "linqing42"
        },
        "content": "        assertEquals(\"T | 0 | return book\", todo.toWriteFile());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "linqing42"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "linqing42": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "linqing42"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "linqing42"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "linqing42"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "linqing42"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "linqing42"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "linqing42"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "linqing42": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "linqing42"
        },
        "content": "javac  -cp ..\\src\\main\\java\\Dukes -Xlint:none -d ..\\bin ..\\src\\main\\java\\Dukes\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "linqing42"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "linqing42": 3,
      "-": 20
    }
  }
]
