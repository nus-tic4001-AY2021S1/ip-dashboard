[
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents a task that a user wants to do. A \u003ccode\u003eDeadline\u003c/code\u003e object has a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * description string, a boolean that indicates whether the task is done, and a by string"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * that indicates the deadline of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Instantiate a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param by Deadline of a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by, formatter);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The by field should be in yyyy-MM-dd HHmm format. E.g. 2020-12-25 1800\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Instantiate a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param by Deadline of a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param isDone Completion status of a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The by field should be in yyyy-MM-dd HHmm format. E.g. 2020-12-25 1800\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Get the deadline of a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @return Deadline of a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return by.toString();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return \"[D]\" + super.toString()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \")\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 63
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * The \u003ccode\u003eDuke\u003c/code\u003e class implements an application that allows users to manage tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * It contains methods that allow the creation, modification and storage of tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private ArrayList\u003cInteger\u003e taskListIndexes;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Constructor for a \u003ccode\u003eDuke\u003c/code\u003e object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param filePath Path of the text file used for storing app data."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            tasks \u003d new TaskList(storage.loadTasks(filePath));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printWelcome();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        boolean isBye \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        while (!isBye) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            String fullCommand \u003d ui.readUserInput();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            String command \u003d Parser.getCommand(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            ui.printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                switch(command) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    isBye \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    addTodo(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    addDeadline(fullCommand);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    addEvent(fullCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    markTaskAsDone(fullCommand);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    deleteTask(fullCommand);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    findTasks(fullCommand);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    listTasks();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    ui.printError(\"I\u0027m sorry, I don\u0027t know what that means.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printGoodbye();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private void addTodo(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        tasks.addTask(Parser.createTodo(fullCommand));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private void addDeadline(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        tasks.addTask(Parser.createDeadline(fullCommand));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private void addEvent(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        tasks.addTask(Parser.createEvent(fullCommand));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printAddedTask(tasks);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private void listTasks() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        taskListIndexes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            taskListIndexes.add(i);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printTasks(tasks);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private void findTasks(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String searchString \u003d Parser.getSearchString(fullCommand).toLowerCase();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        taskListIndexes \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            String taskDescription \u003d tasks.getTask(i).getDescription().toLowerCase();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (taskDescription.contains(searchString)) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                taskListIndexes.add(i);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printFilteredTasks(tasks, taskListIndexes);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private void markTaskAsDone(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        int taskIndex \u003d Parser.getTaskIndex(fullCommand);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            tasks.getTask(taskListIndexes.get(taskIndex)).setDone(true);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"Please run the list or find command first.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The task index is invalid.\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printDoneTask(tasks.getTask(taskListIndexes.get(taskIndex)));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private void deleteTask(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        int taskIndex \u003d Parser.getTaskIndex(fullCommand);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            taskDescription \u003d  tasks.getTask(taskListIndexes.get(taskIndex)).toString();"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            tasks.removeTask(taskListIndexes.get(taskIndex));"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (NullPointerException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"Please run the list or find command first.\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The task index is invalid.\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ui.printRemovedTask(tasks.getSize(), taskDescription);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Main method of Duke. This is the starting point of the app."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @param args Command line arguments. Not used."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 161,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * The \u003ccode\u003eDukeException\u003c/code\u003e class overrides the Exception class\u0027s constructor"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * to implement custom error messages for user-defined exceptions."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 11
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents a task that a user wants to do. An \u003ccode\u003eEvent\u003c/code\u003e object has a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * description string, a boolean that indicates whether the task is done, and an at string"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * that indicates the start and end time of the task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Instantiate an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param at Start and End time of an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Instantiate an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param at Start and End time of an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param isDone Completion status of an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Event(String description, String at, boolean isDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Get the start/end time of an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @return Start/End time of an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 49
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * A \u003ccode\u003eParser\u003c/code\u003e class contains methods that deals with parsing"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * user commands to extract meaningful details from it."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Get the command word from user\u0027s input string."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @return Command word from user\u0027s input string."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static String getCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Creates a \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws DukeException If description for \u003ccode\u003eTodo\u003c/code\u003e is missing."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static Todo createTodo(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String commandParameter \u003d getCommandParameter(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (commandParameter.isEmpty()){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The description of a todo task cannot be empty.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return new Todo(commandParameter);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Creates a \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eDeadline\u003c/code\u003e object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws DukeException If description or by field for \u003ccode\u003eDeadline\u003c/code\u003e is missing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static Deadline createDeadline(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String commandParameter \u003d getCommandParameter(fullCommand);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (commandParameter.isEmpty()){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The description of a deadline task cannot be empty.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String by;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            description \u003d commandParameter.split(\"/by\")[0].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            by \u003d commandParameter.split(\"/by\")[1].trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The by field of the deadline task is missing.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (description.isEmpty()){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The description of a deadline task cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return new Deadline(description, by);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Creates an \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eEvent\u003c/code\u003e object."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws DukeException If description or at field for \u003ccode\u003eDeadline\u003c/code\u003e is missing."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static Event createEvent(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String commandParameter \u003d getCommandParameter(fullCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (commandParameter.isEmpty()){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The description of a event task cannot be empty.\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String description;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String at;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            description \u003d commandParameter.split(\"/at\")[0].trim();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            at \u003d commandParameter.split(\"/at\")[1].trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The at field of the event task is missing.\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (description.isEmpty()){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The description of an event task cannot be empty.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return new Event(description, at);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private static String getCommandParameter(String fullCommand) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return fullCommand.replaceFirst(\"todo\", \"\")"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                .replace(\"deadline\", \"\")"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                .replace(\"event\", \"\")"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                .replace(\"done\", \"\")"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                .replace(\"delete\", \"\")"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                .replace(\"list\", \"\")"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                .trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Gets task index from user\u0027s full input string."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param fullCommand User\u0027s full input string."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Task index."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws DukeException If task index is missing or invalid."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static int getTaskIndex(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String commandParameter \u003d getCommandParameter(fullCommand);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (commandParameter.isEmpty()){"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The task index is missing.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            taskIndex \u003d Integer.parseInt(commandParameter);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch(NumberFormatException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The task index is invalid.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return taskIndex - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static String getSearchString(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String searchString \u003d fullCommand.replaceFirst(\"find\", \"\").trim();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (searchString.isEmpty()){"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"The search string is missing.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return searchString;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 125
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * A \u003ccode\u003eStorage\u003c/code\u003e class contains methods that load Tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * from the hard disk and save tasks to the hard disk."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Instantiate a \u003ccode\u003eStorage\u003c/code\u003e object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param filePath Path of the text file used for storing app data."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Load list of tasks from text file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws DukeException If file folder is unable to be created."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public ArrayList\u003cTask\u003e loadTasks(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Path path \u003d Paths.get(\"data/\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (!(Files.exists(path))) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                Files.createDirectory(path);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"I\u0027ve problem creating the save directory!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ArrayList\u003cString\u003e lines;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        lines \u003d getLines(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            if (!(line.trim().isEmpty())) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                tasks.add(createTask(line));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Save information of all \u003ccode\u003eTasks\u003c/code\u003e objects to text file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @throws DukeException If text file is not found or inaccessible."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void saveTasks(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String isDone;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                if (tasks.getTask(i).getIsDone()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    isDone \u003d \"1\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    isDone \u003d \"0\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String description \u003d tasks.getTask(i).getDescription();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                String lineToSave \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                if (tasks.getTask(i) instanceof Todo) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    lineToSave \u003d \"T\" + \" | \" + isDone + \" | \" + description + System.lineSeparator();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                } else if (tasks.getTask(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    String by \u003d ((Deadline) tasks.getTask(i)).getBy();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    lineToSave \u003d \"D\" + \" | \" + isDone + \" | \" + description + \" | \" + by + System.lineSeparator();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                } else if (tasks.getTask(i) instanceof Event) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    String at \u003d ((Event) tasks.getTask(i)).getAt();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                    lineToSave \u003d \"E\" + \" | \" + isDone + \" | \" + description + \" | \" + at + System.lineSeparator();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                fw.write(lineToSave);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"I\u0027ve problem reading the save file.\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private Task createTask(String line) throws DukeException {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String taskType \u003d line.split(\"\\\\|\")[0].trim();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String isDoneString \u003d line.split(\"\\\\|\")[1].trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String description \u003d line.split(\"\\\\|\")[2].trim();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (isDoneString.equals(\"1\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            String by \u003d line.split(\"\\\\|\")[3].trim();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new Deadline(description, by, isDone);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            String at \u003d line.split(\"\\\\|\")[3].trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new Event(description, at, isDone);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else if (taskType.equals(\"T\")){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            return new Todo(description, isDone);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"There is invalid data in the save file!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private ArrayList\u003cString\u003e getLines(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        ArrayList\u003cString\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                result.add(s.nextLine());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"I\u0027ve problem reading the save file. Let\u0027s start with an empty task list instead.\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 132
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents a task that a user wants to do. A \u003ccode\u003eTask\u003c/code\u003e object has a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * description string and a boolean that indicates whether the task is done. This"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * class defines the common behaviour that can be inherited by subclasses with specific"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * implementation of a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Constructor for a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Constructor for a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param isDone Completion status of a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Get the description of a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Description of a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Get the status icon of a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Status icon of a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        //return tick or X symbol based on isDone value"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return (isDone ? \"Y\" : \"N\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Set the completion status of a \u003ccode\u003eTask\u003c/code\u003e object to done."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param isDone Completion status of a \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + getDescription();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 69
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * A \u003ccode\u003eTaskList\u003c/code\u003e class manages the in-memory task list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * It contains an ArrayList that stores individual \u003ccode\u003eTask\u003c/code\u003e objects and methods"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * to perform operations such as adding and deleting task from the Task List."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Instantiate a \u003ccode\u003eTaskList\u003cTask\u003e\u003c/code\u003e object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eTaskList\u003cTask\u003e\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Instantiate a \u003ccode\u003eTaskList\u003cTask\u003e\u003c/code\u003e object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param tasks List of \u003ccode\u003eTask\u003c/\u003e objects."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eTaskList\u003cTask\u003e\u003c/code\u003e object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Get a \u003ccode\u003eTask\u003cTask\u003e\u003c/code\u003e object from the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @param index Index of Task in the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @return \u003ccode\u003eTask\u003cTask\u003e\u003c/code\u003e object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Add a task to the \u003ccode\u003eTaskList\u003cTask\u003e\u003c/code\u003e object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param t \u003ccode\u003eTask\u003c/code\u003e object."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void addTask(Task t) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Remove a \u003ccode\u003eTask\u003c/code\u003e object from the \u003ccode\u003eTaskList\u003c/code\u003e."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @param index Index of a \u003ccode\u003eTask\u003c/code\u003e in \u003ccode\u003eList\u003cTask\u003e\u003c/code\u003e."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @throws DukeException If index is invalid."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void removeTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            tasks.remove(tasks.get(index));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } catch(IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            throw new DukeException(\"Invalid index\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  Get size of a \u003ccode\u003eTaskList\u003cTask\u003e\u003c/code\u003e object."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *  @return Size of a \u003ccode\u003eList\u003cTask\u003e\u003c/code\u003e object."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 72
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * Represents a task that a user wants to do. A \u003ccode\u003eTodo\u003c/code\u003e object has a"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * description string and a boolean that indicates whether the task is done."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Instantiate a \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of a \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Instantiate a \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param description Description of a \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @param isDone Completion status of a \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return \u003ccode\u003eTodo\u003c/code\u003e object."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 33
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * A \u003ccode\u003eUi\u003c/code\u003e class contains methods that interacts with the users"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * such as obtaining commands from user input and displaying messages to the users."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public static final String INDENT \u003d \"      \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * Get the input stream from the user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     * @return Input stream from the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public String readUserInput() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.print(\"You:  \");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printIndentation() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.print(INDENT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printWelcome() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        String logo \u003d \" ____        _        \" + System.lineSeparator()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \" + System.lineSeparator()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\" + System.lineSeparator()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\" + System.lineSeparator()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\" + System.lineSeparator();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Duke: Hello! I\u0027m Duke, your personal chatbot.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Duke: What can I do for you?\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printError(String errorMessage) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Duke: OPPS!! \" + errorMessage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printGoodbye() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Duke: Bye! Hope to see you again soon.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printAddedTask(TaskList tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Duke: Got it! I have added this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(tasks.getTask(tasks.getSize() - 1).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Now you have \" + tasks.getSize() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printRemovedTask(int size, String taskDescription) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Duke: Noted! I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(taskDescription);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Now you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printDoneTask(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(\"Duke: I have marked this task as done:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printIndentation();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        System.out.println(task.toString());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.out.println(\"Duke: Sorry, there is no task in your list.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.out.println(\"Duke: Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                printIndentation();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                System.out.println((i + 1) + \". \" + tasks.getTask(i).toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void printFilteredTasks(TaskList tasks, ArrayList\u003cInteger\u003e taskListIndexes) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        if (taskListIndexes.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.out.println(\"Duke: Sorry, there is no matching task.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            System.out.println(\"Duke: Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            for (int i \u003d 0; i \u003c taskListIndexes.size(); i++) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                printIndentation();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260222"
        },
        "content": "                System.out.println((i + 1) + \". \" + tasks.getTask(taskListIndexes.get(i)).toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            printLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 106
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for Deadline class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetDescription() throws DukeException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testDeadline \u003d new Deadline(\"Have lunch with John\", \"2020-12-25 1800\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"Have lunch with John\", testDeadline.getDescription());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetIsDone() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testDeadline \u003d new Deadline(\"Have lunch with John\", \"2020-12-25 1800\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testDeadline2 \u003d new Deadline(\"Have lunch with John\", \"2020-12-25T18:00\", true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(false, testDeadline.getIsDone());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(true, testDeadline2.getIsDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testToString() throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testDeadline \u003d new Deadline(\"Have lunch with John\", \"2020-12-25 1800\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testDeadline3 \u003d new Deadline(\"Have lunch with John\", \"2020-12-25T18:00\", true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[D][N] Have lunch with John (by: Dec 25 2020 1800)\", testDeadline.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[D][Y] Have lunch with John (by: Dec 25 2020 1800)\", testDeadline3.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 32
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for Event class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testEvent \u003d new Event(\"Have lunch with John\", \"2/10/2019 2-4pm\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testEvent2 \u003d new Event(\"Have lunch with John\", \"2/10/2019 2-4pm\", true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"Have lunch with John\", testEvent.getDescription());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetIsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testEvent \u003d new Event(\"Have lunch with John\", \"2/10/2019 2-4pm\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testEvent2 \u003d new Event(\"Have lunch with John\", \"2/10/2019 2-4pm\", true);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(false, testEvent.getIsDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(true, testEvent2.getIsDone());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testEvent \u003d new Event(\"Have lunch with John\", \"2/10/2019 2-4pm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        Task testEvent2 \u003d new Event(\"Have lunch with John\", \"2/10/2019 2-4pm\", true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[E][N] Have lunch with John (at: 2/10/2019 2-4pm)\", testEvent.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[E][Y] Have lunch with John (at: 2/10/2019 2-4pm)\", testEvent2.toString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 33
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for Parser class"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"todo\", Parser.getCommand(\"todo Eat breakfast\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"\", Parser.getCommand(\"\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetTaskIndex() throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(2, Parser.getTaskIndex(\"delete 3\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.getTaskIndex(\"delete\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        });"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "            Parser.getTaskIndex(\"delete x\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        });"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 28
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for Task class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private Task task \u003d new Todo(\"Have lunch with John\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    private Task task2 \u003d new Todo(\"Have lunch with John\", true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetDescription() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"Have lunch with John\", task.getDescription());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetIsDone() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(false, task.getIsDone());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(true, task2.getIsDone());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[T][N] Have lunch with John\", task.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(\"[T][Y] Have lunch with John\", task2.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 30
    }
  },
  {
    "path": "src/test/java/duke/TestTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260222"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260222"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260222"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260222"
        },
        "content": " * JUnit tests for TaskList class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260222"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "public class TestTaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    public void testGetSize() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        tasks.addTask(new Todo(\"Have lunch with John\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        tasks.addTask(new Todo(\"Have lunch with Sam\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260222"
        },
        "content": "        assertEquals(2, tasks.getSize());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260222"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260222"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260222": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260222"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "e0260222": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260222"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "e0260222": 1,
      "-": 20
    }
  }
]
