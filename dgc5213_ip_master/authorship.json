[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // A string to hold the data file name which contains all tasks and their details"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static String filename \u003d \"src/main/java/data/duke.txt\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args)  {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        ProgramExit programExit \u003d new ProgramExit();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Storage store \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        // reading the date from task data file"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        // if this is the first time, a message will be shown that no data file is found"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "       // todoList.readFromFile(filename);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        store.readFromFile(filename);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Ui.sayWelcome();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        while (!programExit.getIsExit()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            parser.getCommand(Ui.readUserCommand(), ui, programExit, taskList,filename , store);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dgc5213": 33,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A Exception to show the error message"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param message A String that holds the user input."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " * Parser: deals with making sense of the user command"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to parser a String."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Assume that the Task Details start from the second words. This method can filter out the first words."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param line A String that holds the user input."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @throws DukeException If Task Detail is Empty/Null: Returning to Main MenuShow the message to user and notify the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static String filterTaskDetails(String line) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String task_detail;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        int len \u003d line.split(\" \").length; // to check who many words"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String[] line_arr \u003d line.split(\" \", 2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String commandFirstWord \u003d line.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (len \u003e 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task_detail \u003d line_arr[1].trim();  // filter out the first words"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a \" + commandFirstWord + \" cannot be empty.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return task_detail;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to parser a String and get the second word from the string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param input A String that holds the user input."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String getSecondWord(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String commandSecondWord \u003d input.split(\" \")[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return commandSecondWord;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to parser a String and process necessary steps and tasks based on the user inputs."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Assume that the Task Details start from the second words. This method can filter out the first words."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *  @param input       A String that holds the user input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param ui          A Ui that show message to user."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param programExit A ProgramExit  to check if it is needed to exit the program."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param taskList    A Task TodoList contains the ArrayList of Task objects, contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void getCommand(String input, Ui ui, ProgramExit programExit, TaskList taskList, String outputFileName , Storage store) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String commandFirstWord \u003d input.split(\" \")[0].toLowerCase();//extract the first word of the user input, and lowercase it."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            switch (commandFirstWord) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    ui.sayBye();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    programExit.toExit();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    TaskList.listAllTasks();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.markSelectedTaskDone(getSecondWord(input));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.markSelectedTaskDelete(getSecondWord(input));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.addToDoType(filterTaskDetails(input));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.readTaskFromUser(filterTaskDetails(input));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.addDeadlineType(filterTaskDetails(input));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.readTaskFromUser(filterTaskDetails(input));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.addEventType(filterTaskDetails(input));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.readTaskFromUser(filterTaskDetails(input));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"save\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                   // todoList.saveToFile(outputFileName);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    store.saveToFile(outputFileName);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.findTaskByKeyword(filterTaskDetails(input));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.showMessage(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.printLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            Ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dgc5213": 138
    }
  },
  {
    "path": "src/main/java/ProgramExit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class ProgramExit {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // A boolean value, if true: Exit the program, otherwise false."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Creating an object of ProgramExit class"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * set the default Exit as false"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    ProgramExit() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        isExit \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to set the Exit as true"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void toExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to return the Exit status"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public boolean getIsExit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 28
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " * Storage: deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import Tasks.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // An array list of task objects"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * creating an TodoList object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        taskList \u003d TaskList.getList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /* readFromFile"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will read the data file from disk which will contain the data of previously saved tasks"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * It can handle the case that data folder is not exist. this method can auto create data folder and data file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param filename A String that contains the file path"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void readFromFile(String filename) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            if (!Files.isReadable(Paths.get(filename))) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                Ui.showMessage(\"The data file i.e.: \" + filename + \" does not exists!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                String folderPath \u003d System.getProperty(\"user.dir\") + File.separator + \"src\" + File.separator + \"main\" + File.separator + \"java\" + File.separator + \"data\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                File folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                File myObj \u003d new File(filename);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (!folder.exists() \u0026\u0026 !folder.isDirectory()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    folder.mkdirs();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.showMessage(\"Folder created:\" + folder);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.showMessage(\"Folder exist\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                Ui.showMessage(\"Now, New file created: \" + myObj.getName());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            BufferedReader reader \u003d null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            String tempString \u003d null;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            int line \u003d 1; //// the line number is started from 1st"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                Ui.showMessage(\"Read tasks from txt file, line by line:\" + filename);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                reader \u003d new BufferedReader(new FileReader(filename));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                while ((tempString \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.showMessage(\"Line\" + line + \":\" + tempString);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    createTaskFromFile(tempString);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    line++;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            } catch (FileNotFoundException | ParseException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (reader !\u003d null) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                        reader.close();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    } catch (IOException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                        // TODO Auto-generated catch block"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                        e.printStackTrace();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will auto create relevant task from the data file"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * the task could be event task, deadline task, todo task"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param line get the task content from txt file, which contains task type, task description, task status"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private void createTaskFromFile(String line) throws ParseException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskSchedule \u003d null;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String[] line_arr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        /* get the value of TaskDetail \u0026 TaskDeadlineDetail */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        taskDescription \u003d line_arr[2].trim();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (line_arr.length \u003e 3) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskSchedule \u003d line_arr[3].trim();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Task task \u003d new Task(\"default\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        DateTimeFormatter formatterEventSchedule \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        /* pass the value to Task:  todo / deadline /event, and lable the task status */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (line_arr[0].equals(\"D \") \u0026 line_arr[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task \u003d new Deadline(taskDescription, LocalDate.parse(taskSchedule));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"D \") \u0026 line_arr[1].equals(\" 0 \")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add((new Deadline(taskDescription, LocalDate.parse(taskSchedule))));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"E \") \u0026 line_arr[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task \u003d new Event(taskDescription, LocalDateTime.parse(taskSchedule, formatterEventSchedule));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"E \") \u0026 line_arr[1].equals(\" 0 \")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(new Event(taskDescription, LocalDateTime.parse(taskSchedule, formatterEventSchedule)));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"T \") \u0026 line_arr[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"T \") \u0026 line_arr[1].equals(\" 0 \")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will write the data of Tasks from ArrayList to data file on disk"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param filename a string specifying the full path and extension of data file"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void saveToFile(String filename) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        File out \u003d new File(filename);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (out.exists()) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            out.delete();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(out))) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                //  System.out.println(taskList);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (taskList.get(i) instanceof Deadline) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    bw.append(\"D \");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    bw.append(\"| \").append(taskList.get(i).isDone() ? \"1\" : \"0\").append(\" | \").append(taskList.get(i).getDescription()).append(\" | \").append(((Deadline) taskList.get(i)).getDueDate().toString());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                } else if (taskList.get(i) instanceof Event) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    bw.append(\"E \");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    bw.append(\"| \").append(taskList.get(i).isDone() ? \"1\" : \"0\").append(\" | \").append(taskList.get(i).getDescription()).append(\" | \").append(((Event) taskList.get(i)).getDueDateTime().toString());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                } else if (taskList.get(i) instanceof Todo) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    bw.append(\"T \");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    bw.append(\"| \").append(taskList.get(i).isDone() ? \"1\" : \"0\").append(\" | \").append(taskList.get(i).getDescription());"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                bw.append(\"\\n\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            Ui.showMessage(ex.getMessage());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Ui.showMessage(\"Task save to disk txt file---\u003e:\" + filename);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 181
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import Tasks.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import Tasks.Event;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import Tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " * TaskList: contains the task list e.g., it has operations to add/delete tasks in the list"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " * TodoList"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // An array list of task objects"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * creating an TodoList object"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to list done all the tasks from the list and show the list to user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Show the message to user and notify the user that \"Here are the tasks in your list\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static void listAllTasks() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Ui.showMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            Ui.showMessage((i + 1) + \".\" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static boolean isValidDateTimeFormat(String format, String value, Locale locale) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        LocalDateTime ldt \u003d null;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        DateTimeFormatter fomatter \u003d DateTimeFormatter.ofPattern(format, locale);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            ldt \u003d LocalDateTime.parse(value, fomatter);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            String result \u003d ldt.format(fomatter);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            return result.equals(value);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                LocalDate ld \u003d LocalDate.parse(value, fomatter);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                String result \u003d ld.format(fomatter);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                return result.equals(value);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            } catch (DateTimeParseException exp) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    LocalTime lt \u003d LocalTime.parse(value, fomatter);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    String result \u003d lt.format(fomatter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    return result.equals(value);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                } catch (DateTimeParseException e2) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    // Debugging purposes"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    //e2.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Adding a Task object in ArrayList"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * The Task is in \"Todo\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param toAddTaskDetails A String that holds the details of a task and it cannot be empty or null."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void addToDoType(String toAddTaskDetails) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        taskList.add(new Todo(toAddTaskDetails));"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Adding a Task object in ArrayList"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * The Task is in \"Deadline\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param toAddTaskDetails A String that holds the details of a task and it cannot be empty or null."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void addDeadlineType(String toAddTaskDetails) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (!toAddTaskDetails.toLowerCase().contains(\" /by\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new DukeException(\"Cannot find \u0027/by\u0027 in command.Please enter valid task details.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (toAddTaskDetails.split(\"(?i)/by\").length \u003c 2) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new DukeException(\"No deadline time found after keyword /by.Please enter valid task details.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskDescription \u003d (toAddTaskDetails.split(\"(?i)/by\")[0]).trim();// splits case insensitive"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskDeadline \u003d (toAddTaskDetails.split(\"(?i)/by\")[1]).trim();// splits case insensitive"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        boolean dateTimeFormatChecker \u003d isValidDateTimeFormat(\"yyyy-MM-dd\", taskDeadline, Locale.ENGLISH); // to check if the user enter the correct date format"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (!dateTimeFormatChecker) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new DukeException(\"Please enter correct deadline Due Date yyyy-MM-dd, example: 2019-12-31\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        LocalDate dueDate \u003d LocalDate.parse(taskDeadline);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        taskList.add(new Deadline(taskDescription, dueDate));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Adding a Task object in ArrayList"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * The Task is in \"Event\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param toAddTaskDetails A String that holds the details of a task and it cannot be empty or null."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void addEventType(String toAddTaskDetails) throws DukeException {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (!toAddTaskDetails.toLowerCase().contains(\" /at\")) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new DukeException(\"Cannot find \u0027/at\u0027 in command.Please enter valid task details.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (toAddTaskDetails.split(\"(?i)/at \").length \u003c 2) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new DukeException(\"No event time found after keyword /at.Please enter valid task details.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskDescription \u003d (toAddTaskDetails.split(\"(?i)/at\")[0]).trim();// splits case insensitive"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskEventDate \u003d (toAddTaskDetails.split(\"(?i)/at\")[1]).trim();// splits case insensitive"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        boolean dateTimeFormatChecker \u003d isValidDateTimeFormat(\"yyyy-MM-dd HH:mm\", taskEventDate, Locale.ENGLISH); // to check if the user enter the correct date format"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (!dateTimeFormatChecker) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            throw new DukeException(\"Please enter correct event Date yyyy-MM-dd HH:mm, example: 2019-12-31 11:10\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        LocalDateTime formatDateTime \u003d LocalDateTime.parse(taskEventDate, formatter);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        taskList.add(new Event(taskDescription, formatDateTime));"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to read the value from user."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Show the message to user and notify the user that a current task is added in the list"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param input A String that holds the user input from the terminal"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void readTaskFromUser(String input) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Ui.showMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        int currentNewAddedTaskIndex \u003d (taskList.size() - 1);"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Ui.showMessage(\"  \" + taskList.get(currentNewAddedTaskIndex).toString());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Ui.showMessage(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to delete the task as the user requested."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Show the message to user and notify the user that a current task is deleted in the list"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param selectedTask A String that holds the user input from the terminal"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void markSelectedTaskDelete(String selectedTask) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            // checking if the task number is given and empty string or null"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            if (selectedTask.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                throw new NullPointerException(\"TASK NUM is Empty/Null: Returning to Main Menu\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(selectedTask) - 1;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            if (taskIndex \u003c 0 || taskIndex \u003e taskList.size()) {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException(\"TASK NUM cannot be found in the task list: Returning to Main Menu\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (i \u003d\u003d taskIndex) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.showMessage(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.showMessage(\"  \" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.remove(i);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            Ui.showMessage(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            Ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to mark the selected task as completed"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * update value of the task field:isDone \u003d true"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param selectedTask A String that holds the ID (number) of a task"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @throws NullPointerException           If TASK NUM is Empty/Null: Returning to Main Menu"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException If TASK NUM is invalid, TASK NUM cannot be found in the task list: Returning to Main Menu"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void markSelectedTaskDone(String selectedTask) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            // checking if the task number is given and empty string or null"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            if (selectedTask.trim().equals(\"\")) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                throw new NullPointerException(\"TASK NUM is Empty/Null: Returning to Main Menu\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(selectedTask) - 1;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            if (taskIndex \u003c 0 || taskIndex \u003e taskList.size()) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                throw new ArrayIndexOutOfBoundsException(\"TASK NUM cannot be found in the task list: Returning to Main Menu\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                if (i \u003d\u003d taskIndex) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.showMessage(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    taskList.get(i).setDone();"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                    Ui.showMessage(\"[\" + taskList.get(i).getStatusIcon() + \"] \" + taskList.get(i).getDescription());"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            Ui.showMessage(e.getMessage());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will auto create relevant task from the data file"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * the task could be event task, deadline task, todo task"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param line get the task content from txt file, which contains task type, task description, task status"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    private void createTaskFromFile(String line) throws ParseException {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskSchedule \u003d null;"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String[] line_arr \u003d line.split(\"\\\\|\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        /* get the value of TaskDetail \u0026 TaskDeadlineDetail */"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        taskDescription \u003d line_arr[2].trim();"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (line_arr.length \u003e 3) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskSchedule \u003d line_arr[3].trim();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Task task \u003d new Task(\"default\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        DateTimeFormatter formatterEventSchedule \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\u0027T\u0027HH:mm\");"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        /* pass the value to Task:  todo / deadline /event, and lable the task status */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (line_arr[0].equals(\"D \") \u0026 line_arr[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task \u003d new Deadline(taskDescription, LocalDate.parse(taskSchedule));"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"D \") \u0026 line_arr[1].equals(\" 0 \")) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add((new Deadline(taskDescription, LocalDate.parse(taskSchedule))));"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"E \") \u0026 line_arr[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task \u003d new Event(taskDescription, LocalDateTime.parse(taskSchedule, formatterEventSchedule));"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"E \") \u0026 line_arr[1].equals(\" 0 \")) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(new Event(taskDescription, LocalDateTime.parse(taskSchedule, formatterEventSchedule)));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"T \") \u0026 line_arr[1].equals(\" 1 \")) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            task.setDone();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(task);"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else if (line_arr[0].equals(\"T \") \u0026 line_arr[1].equals(\" 0 \")) {"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskList.add(new Todo(taskDescription));"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to find a task by searching for a keyword."
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Show the message to user and notify the user that \"Here are the matching tasks in your list\""
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param line get the task content from txt file, which contains keyword"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void findTaskByKeyword(String line) {"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String taskDescription;"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        ArrayList\u003cTask\u003e taskListKeywordFound \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        int matchedCount \u003d 0;"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            taskDescription \u003d task.toString();"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            if (taskDescription.toLowerCase().contains(line.toLowerCase())) {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                matchedCount \u003d matchedCount + 1;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//                Ui.showMessage((matchedCount) + \".\" + taskList.get(i).toString());"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                taskListKeywordFound.add(task);  // once there is a match to a task, add this task to the new task list:taskListKeywordFound"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        if (matchedCount \u003d\u003d 0) {"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            Ui.showMessage(\"Sorry! Cannot find any matched tasks in your list.\");"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            Ui.showMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            for (int i \u003d 0; i \u003c taskListKeywordFound.size(); i++) {"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "                Ui.showMessage((i + 1) + \".\" + taskListKeywordFound.get(i).toString());  // display the matched tasks to user from the task list:taskListKeywordFound"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        }"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "dgc5213": 325
    }
  },
  {
    "path": "src/main/java/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // A String that holds the deadline date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // The due date of the task as yyyy-mm-dd format"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected LocalDate dueDate;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected LocalDateTime dueDateTime;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Creating an object of Event class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param description A String that holds the description of a task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param dueDate     A LocalDate that holds the deadline date.The due date of the task as yyyy-mm-dd format"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public Deadline(String description, LocalDate dueDate) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        this.setDueDate(dueDate);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Creating an object of Task class"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param description A String that holds the description of a task"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Gets the deadline description of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return by This deadline description (BY)"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Changes the deadline description of the task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This may involve a lengthy legal process."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param by This deadline description (BY)"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void setBy(String by) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to get the due date of the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return the due date of task as LocalDate object"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public LocalDate getDueDate() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to set the due date of a task"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param dueDate The due date of the task as yyyy-mm-dd format"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @throws DateTimeException if given date is a past date"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected void setDueDate(LocalDate dueDate) throws DateTimeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//        // Throw DateTimeException if past date is given"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//        if (dueDate.compareTo(LocalDate.now())\u003c0) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//            throw new DateTimeException(\"Past Date not allowed\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        //Ensure dueDate is saved as yyyy-MM-dd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        DateTimeFormatter formattedDate \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        this.dueDate \u003d LocalDate.parse(dueDate.format(formattedDate));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to get the Task data as formatted string to display task type [D], task status and task description"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return a formatted String of task type [D], task status and task description"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * To format the date display to the users."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * * LONG format:    April 3, 2019"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * * MEDIUM format:  Apr 3, 2019"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * * SHORT format:   4/3/19"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * * FULL format:    Wednesday, April 3, 2019"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String formattedDate \u003d dueDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 112
    }
  },
  {
    "path": "src/main/java/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // A String that holds the event date or time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected LocalDateTime dueDateTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Creating an object of Event class"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param description A String that holds the description of a task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param dueDateTime          A LocalDateTime that holds the event date or time"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public Event(String description, LocalDateTime dueDateTime) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        this.dueDateTime\u003ddueDateTime;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to set the due date of a task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param dueDateTime The due date of the task as yyyy-MM-dd HH:mm"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @throws DateTimeException if given date is a past date"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected void setDueDateTime (LocalDateTime dueDateTime) throws DateTimeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//        // Throw DateTimeException if past date is given"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//        if (dueDate.compareTo(LocalDate.now())\u003c0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//            throw new DateTimeException(\"Past Date not allowed\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        //Ensure dueDate is saved as yyyy-MM-dd"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        DateTimeFormatter formattedDate \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        this.dueDateTime \u003d LocalDateTime.parse(dueDateTime.format(formattedDate));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Gets the Event duration."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return getDueDateTime This Event duration/duedate (BY)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public LocalDateTime getDueDateTime() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return dueDateTime;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to get the Task data as formatted string to display task type [E], task status and task description"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return a formatted String of task type [E], task status and task description"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        //Create formatter"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        DateTimeFormatter FOMATTER \u003d DateTimeFormatter.ofPattern(\"EEEE, MMM dd, yyyy HH:mm:ss a\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        //Get formatted String"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        String formattedDate \u003d FOMATTER.format(dueDateTime);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 80
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // A String that holds the description of a task"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    // A boolean value, if true: the task is completed, otherwise false."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Creating an object of Task class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param description A String that holds the description of a task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to get the Task Status Icon"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return a String containing the icon: tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to get the Task description"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return a String containing the description of task"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to set the Task as done/completed"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return declare is done status"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to get the Task data as formatted string to display both task status and task description"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return a formatted String of task status and task description"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 69
    }
  },
  {
    "path": "src/main/java/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * Creating an object of Todo class"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param description A String that holds the description of a task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * A method to get the Task data as formatted string to display task type [T], task status and task description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @return a formatted String of task type [T], task status and task description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 25
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " * Ui: deals with interactions with the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dgc5213"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will scan the user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static String readUserCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will display line on standard output (terminal)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static void printLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"_________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will display welcome message to user on standard output (terminal)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static void sayWelcome() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will display any message to user on standard output (terminal)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * @param message A String which contains the message we will show to user"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public static void showMessage(String message) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     * This method will say goodbye to user on standard output (terminal)"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    public void sayBye() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 53
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "todo read book"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 1
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dgc5213"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 2,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dgc5213"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dgc5213": 1,
      "-": 37
    }
  }
]
