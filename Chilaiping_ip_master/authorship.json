[
  {
    "path": "src/main/java/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Deadlines(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "class Global {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    static String PATTERNLINE \u003d \"___________________________________________________________________________\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "enum Action {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    Done,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    List,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    AddTodo,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    AddDeadlines,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    AddEvents,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        greetNote(\"welcome\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        while(in.hasNextLine()){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            if(!(input.toLowerCase()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                processInput(input, tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                greetNote(\"bye\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void greetNote(String hi_bye) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String welcome \u003d Global.PATTERNLINE"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + \"\\n     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + Global.PATTERNLINE + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String farewell \u003d Global.PATTERNLINE"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + \"\\n   Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        + Global.PATTERNLINE;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(hi_bye.equals(\"welcome\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(welcome);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(farewell);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void processInput(String input, ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String command \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Action action;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int count \u003d tasks.size();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            action \u003d validateCommand(command);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception g) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(g + \"\\n\" + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            switch(action) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case List:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                printList(tasks);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case Done:"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                markDone(command, tasks);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case AddTodo:"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                addTodo(tasks, input, count);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case AddDeadlines:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                addDeadlines(tasks, input, count);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case AddEvents:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                addEvents(tasks, input, count);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(Global.PATTERNLINE + \"\\nYou have entered invalid input. Please re-input or \\n\" +"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        \"Enter bye to terminate the program.\\n\" + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception m) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(m + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void replyLine(ArrayList\u003cTask\u003e tasks, String input, int count) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.print(Global.PATTERNLINE + \"\\nGot it. I\u0027ve added this task: \\n\\t\" );"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        tasks.get(count).printTask();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        count +\u003d 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\\n\" + Global.PATTERNLINE );"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void printList(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(\"Your List is Empty\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.print(i + \". \");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.get(i-1).printTask();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void markDone(String command, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        // If user input done1 instead of done 1"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(command.contains(\" \")) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            index \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            index \u003d Integer.parseInt(command.substring(4));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.get(index-1).markAsDone();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(Global.PATTERNLINE + \"\\nNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.get(index-1).printTask();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(Global.PATTERNLINE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(Global.PATTERNLINE + \"\\nFriend, You do not have so much task in the list\\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void addTodo(ArrayList\u003cTask\u003e tasks, String input, int count) throws DukeException{"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a Todo cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    \"Please re-input or enter bye to terminate the program\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.add(new ToDos(input.substring(5)));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            replyLine(tasks, input, count);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void addDeadlines(ArrayList\u003cTask\u003e tasks, String input, int count) throws DukeException{"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String errorEmpty \u003d \"☹ OOPS!!! The description of a Deadlines cannot be empty.\\n \" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                \"Please re-input or enter bye to terminate the program\\n\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String errorMissing \u003d \"You have input your Schedule or Wrong format\\nPlease include -\u003e /by when\\n\";"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(!input.contains(\" \")) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorEmpty);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if(input.length()-1 \u003d\u003d input.indexOf(\" \")) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorEmpty);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if(!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorMissing);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            int index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String schedule \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String taskName \u003d input.substring(input.indexOf(\" \")+1, index);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.add(new Deadlines(taskName, schedule));"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            replyLine(tasks, input, count);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void addEvents(ArrayList\u003cTask\u003e tasks, String input, int count) throws DukeException{"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String errorEmpty \u003d \"☹ OOPS!!! The description of a Events cannot be empty.\\n \" +"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                \"Please re-input or enter bye to terminate the program\\n\";"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String errorMissing \u003d \"You have not input your Schedule or Wrong format. \\nPlease include -\u003e /at when\\n\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String schedule, taskName;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(!input.contains(\" \")) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorEmpty);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if(input.length()-1 \u003d\u003d input.indexOf(\" \")) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorEmpty);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if(!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorMissing);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            int index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            schedule \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            taskName \u003d input.substring(input.indexOf(\" \")+1, index);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.add(new Events(taskName, schedule));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            replyLine(tasks, input, count);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    static Action validateCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return  Action.List;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.length()\u003e 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.Done;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.length()\u003e 3 \u0026\u0026 command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.AddTodo;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.length()\u003e 7 \u0026\u0026 command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.AddDeadlines;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.length()\u003e 4 \u0026\u0026 command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.AddEvents;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    \"Please re-input or enter bye to terminate the program\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 202,
      "-": 11
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 6
    }
  },
  {
    "path": "src/main/java/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected String on;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Events(String description, String on) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "   @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + on + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //return this.toString() ;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" +  this.description );"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //System.out.println(\"[\" + this.getStatusIcon() + \"] \" +  this.description ) ;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(this.toString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 27
    }
  },
  {
    "path": "src/main/java/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class ToDos extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "todo thinking"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "deadline adding new stuff /by 30 Apr"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "events attend meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "if ! javac -cp /Users/laiping/Documents/TIC4001/ip/src/main/java -Xlint:none -d /Users/laiping/Documents/TIC4001/ip/bin /Users/laiping/Documents/TIC4001/ip/src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "cp ./EXPECTED.TXT ./EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "dos2unix ./ACTUAL.TXT ./EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 5,
      "-": 34
    }
  }
]
