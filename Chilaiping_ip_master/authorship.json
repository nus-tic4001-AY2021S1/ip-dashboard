[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "# Duke - Tasks Handler"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "The project template for a greenfield Java project provided by Lecturer. It\u0027s named after the Java mascot _Duke_. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "Given below are instructions on how to use it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "## Project Overview and Operations"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "This project is to manage Tasks with CLI. It is able to handle some simple tasks, such as add, delete, find and set task as completed. "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "Below are some basic command to manage Tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "1. Add Todo Your Task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "1. Add Deadlines Your Task /by 19-9-2020 18:00"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "1. Add Events Your Task /at 19-9-2020 18:00-20:00"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "1. List (View current existing tasks listing)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "1. Done 1 (Set item no 1 as completed Task)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "1. Delete 4 (Deleting item no 4 from the list)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "1. Find keywords "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 17,
      "-": 24
    }
  },
  {
    "path": "record.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "[D][✘] thinking  (by: Aug 9 2020 09:04)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "[D][✓] thinking  (by: Aug 9 2020)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "[D][✘] joker  (by: Sep 4 2020)"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 3
    }
  },
  {
    "path": "src/main/java/duke/Action.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public enum Action {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    Done,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    Delete,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    List,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    Find,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    AddTodo,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    AddDeadlines,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    AddEvents,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 11
    }
  },
  {
    "path": "src/main/java/duke/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected String by, time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected LocalTime timeline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Deadlines(String description, LocalDate by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.deadline \u003d by;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Deadlines(String description, LocalDate by, LocalTime time ) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.deadline \u003d by;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.timeline \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //@Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(timeline !\u003d null) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" +  this.description + \" (by: \" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    timeline.format(DateTimeFormatter.ofPattern(\"kk:mm\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return \"[D]\" + \"[\" + this.getStatusIcon() + \"] \" +  this.description + \" (by: \" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    deadline.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 36
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import ui.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import ui.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import ui.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Duke(String filePath) throws IOException, DukeException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void run() throws IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        while(in.hasNextLine()){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String input \u003d in.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            if(!(input.toLowerCase()).equals(\"bye\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                Parser.processInput(input, tasks.getTasksArr());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                ui.greetNote(\"bye\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                Storage.writeToFile(tasks.getTasksArr());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        new Duke(\"ip/record.txt\").run();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 47,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public DukeException(String s) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 8
    }
  },
  {
    "path": "src/main/java/duke/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected String on;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Events(String description, String on) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.on \u003d on;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "   //@Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //return \"[E]\" + super.toString() + \" (at: \" + on + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return \"[E]\" + \"[\" + this.getStatusIcon() + \"] \" +  this.description + \" (at: \" + on + \")\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 17
    }
  },
  {
    "path": "src/main/java/duke/Global.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Global {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static final String PATTERNLINE \u003d \"___________________________________________________________________________\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 5
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    abstract public String toString(); /*{"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //return this.toString() ;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return (\"[\" + this.getStatusIcon() + \"] \" +  this.description );"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void printTask() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //System.out.println(\"[\" + this.getStatusIcon() + \"] \" +  this.description ) ;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(this.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 30
    }
  },
  {
    "path": "src/main/java/duke/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class ToDos extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //return \"[T]\" + super.toString() ;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return \"[T]\" + \"[\" + this.getStatusIcon() + \"] \" +  this.description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 17
    }
  },
  {
    "path": "src/main/java/ui/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Global;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Action;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " * This class is to understand User input and ensure all request are handled by different classes"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Parser(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * This method is to take action from validateCommand and then proecss the action accordingly."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void processInput(String input, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String command \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Action action;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int count \u003d tasks.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            action \u003d validateCommand(command);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception g) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Ui.errInvalidInput(g);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            switch (action) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case List:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                Ui.printList(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case Done:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                markDone(command, tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                Storage.updateStatusToFile(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case AddTodo:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                TaskList.addTodo(tasks, input, count);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                //Storage.addToFile(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case AddDeadlines:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                TaskList.addDeadlines(tasks, input, count);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                //Storage.addToFile(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case AddEvents:"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                TaskList.addEvents(tasks, input, count);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                //Storage.addToFile(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case Delete:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                TaskList.deleteTask(tasks, command);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            case Find:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                Ui.findTask(command, tasks);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(Global.PATTERNLINE + \"\\nYou have entered invalid input. Please re-input or \\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                        \"Enter bye to terminate the program.\\n\" + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (Exception m) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(m + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * This method analysed and clasified the user input to Process input accordingly."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * Any unknown command will be throw."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static Action validateCommand (String command) throws DukeException {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return  Action.List;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.Find;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.Delete;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.length()\u003e 4 \u0026\u0026 command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.Done;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.length()\u003e 3 \u0026\u0026 command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.AddTodo;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.length()\u003e 7 \u0026\u0026 command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.AddDeadlines;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if (command.length()\u003e 4 \u0026\u0026 command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            return Action.AddEvents;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    \"Please re-input or enter bye to terminate the program\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void markDone(String command, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        // If user input done1 instead of done 1"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(command.contains(\" \")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            index \u003d Integer.parseInt(command.substring(5));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            index \u003d Integer.parseInt(command.substring(4));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.get(index-1).markAsDone();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Ui.replyMarkedDone(tasks, index);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Ui.errIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 126
    }
  },
  {
    "path": "src/main/java/ui/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.ToDos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Deadlines;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "/**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " * This class in charge of memory side, where Task  will read from or write to the txt File"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " * File Path is a fixed Path, file address is passed from main class."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static String FILEPATH;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.FILEPATH \u003d filePath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void createFile() throws IOException, DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        File f \u003d new File (FILEPATH);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        boolean result \u003d f.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(!result) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(\"File Not Found\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * This method append Task List to File, to be called whenever new tasks was entered"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void addToFile(ArrayList\u003cTask\u003e tasks) throws IOException{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILEPATH, true);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int index \u003d tasks.size();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        fw.write(String.valueOf(tasks.get(index-1))+ \"\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * This method update the current Task List to File before the program terminate"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void writeToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILEPATH, false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            fw.write(String.valueOf(tasks.get(i)+ \"\\n\"));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * This method is updating task status to the file."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * This method is called whenever user change the status of the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void updateStatusToFile(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        FileWriter fw \u003d new FileWriter(FILEPATH);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            fw.write(String.valueOf(tasks.get(i)) + \"\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    //public static void load (ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static ArrayList\u003cTask\u003e load () throws IOException, DukeException  {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        File fw \u003d new File(FILEPATH);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (! fw.exists()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(\"File Not Found\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Scanner s \u003d new Scanner(fw);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String item \u003d s.nextLine();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            if (item.startsWith(\"[T\")) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                addTodosToArray(tasks, item, count);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            } else if (item.startsWith(\"[D\")) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                addDeadlinesToArray(tasks, item, count);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                addEventsToArray(tasks, item, count);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            count ++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void addTodosToArray (ArrayList\u003cTask\u003e tasks, String line, int ArrIndex) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String status \u003d line.substring(4,5);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String taskName \u003d line.substring(7);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        tasks.add(new ToDos (taskName));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(status.equals(\"\\u2713\") ) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.get(ArrIndex).markAsDone();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void addDeadlinesToArray(ArrayList\u003cTask\u003e tasks, String line, int ArrIndex){"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int index \u003d line.indexOf(\"(by\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String taskName \u003d line.substring(7, index-1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String status \u003d line.substring(4,5);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String tschedule \u003d line.substring(line.length() - 6, line.length() -1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(tschedule.contains(\":\")){"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String schedule \u003d line.substring(index + 5, line.length()-7);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            LocalDate dateline \u003d LocalDate.parse(schedule, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            LocalTime timeline \u003d LocalTime.parse(tschedule);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.add(new Deadlines(taskName, dateline,timeline));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else{"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String schedule \u003d line.substring(index + 5, line.length()-1);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            LocalDate dateline \u003d LocalDate.parse(schedule, DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.add(new Deadlines(taskName, dateline));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(status.equals(\"\\u2713\") ) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.get(ArrIndex).markAsDone();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static void addEventsToArray (ArrayList \u003cTask\u003e tasks, String line, int ArrIndex) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int index \u003d line.indexOf(\"(at\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String status \u003d line.substring(4,5);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String schedule \u003d line.substring(index + 4);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String taskName \u003d line.substring(line.indexOf(\" \")+1, index);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        tasks.add(new Events(taskName, schedule));"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(status.equals(\"\\u2713\") ) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.get(ArrIndex).markAsDone();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 152
    }
  },
  {
    "path": "src/main/java/ui/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Deadlines;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Events;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " * This class in charge of performing action related to TaskList (only RAM, not related to Memory)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " * Adding new Task, delete task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasksArr() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void deleteTask (ArrayList\u003cTask\u003e tasks, String command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(command.contains(\" \")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            index \u003d Integer.parseInt(command.substring(7));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            index \u003d Integer.parseInt(command.substring(6));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Ui.replyDeleteTask(tasks, index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.remove(index-1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Ui.errIndexOutOfBoundsException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void addTodo(ArrayList\u003cTask\u003e tasks, String input, int count) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! The description of a Todo cannot be empty.\\n\" +"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    \"Please re-input or enter bye to terminate the program\\n\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.add(new ToDos(input.substring(5)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Ui.replyLine(tasks, input, count);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void addDeadlines(ArrayList\u003cTask\u003e tasks, String input, int count) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(!input.contains(\" \")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(Ui.deadlineErrEmpty());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if(input.length()-1 \u003d\u003d input.indexOf(\" \")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(Ui.deadlineErrEmpty());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if(!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(Ui.deadlineNoBy());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            int index \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String taskName \u003d input.substring(input.indexOf(\" \")+1, index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            if(input.indexOf(\" \",index+7) !\u003d -1) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                int timeIndex \u003d input.indexOf(\" \",index+7);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                LocalTime timeline \u003d LocalTime.parse(input.substring(timeIndex+1));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                String schedule \u003d input.substring(index + 4, timeIndex);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                LocalDate dateline \u003d LocalDate.parse(schedule);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                tasks.add(new Deadlines(taskName, dateline, timeline));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                String schedule \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                LocalDate dateline \u003d LocalDate.parse(schedule);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                tasks.add(new Deadlines(taskName, dateline));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Ui.replyLine(tasks, input, count);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void addEvents(ArrayList\u003cTask\u003e tasks, String input, int count) throws DukeException{"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String errorEmpty \u003d \"☹ OOPS!!! The description of a Events cannot be empty.\\n \" +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                \"Please re-input or enter bye to terminate the program\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String errorMissing \u003d \"You have not input your Schedule or Wrong format. \\nPlease include -\u003e /at when\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String schedule, taskName;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(!input.contains(\" \")) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorEmpty);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if(input.length()-1 \u003d\u003d input.indexOf(\" \")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorEmpty);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else if(!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(errorMissing);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            int index \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            schedule \u003d input.substring(index + 4);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            taskName \u003d input.substring(input.indexOf(\" \")+1, index);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.add(new Events(taskName, schedule));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            Ui.replyLine(tasks, input, count);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 108
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Global;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " * This class is to output the appropriate display to user based on user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " * Greeting, reply, error Messages."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public Ui () {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        welcomeLogo();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void welcomeLogo() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        greetNote(\"welcome\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void greetNote(String hi_bye) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String welcome \u003d Global.PATTERNLINE"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + \"\\n     Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + \"     What can I do for you?\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + Global.PATTERNLINE + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String farewell \u003d Global.PATTERNLINE"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + \"\\n   Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + Global.PATTERNLINE;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(hi_bye.equals(\"welcome\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(welcome);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(farewell);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * This method is a print out a list of existing task whenever user requested from Array List."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    static void printList(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(\"Your List is Empty\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for(int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.print(i + \". \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            tasks.get(i-1).printTask();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    static void findTask(String input, ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            String temp \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            if(temp.contains(keyword)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                if(count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                    System.out.println(Global.PATTERNLINE + \"\\nHere are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                System.out.println(count + \". \" + temp );"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                count ++;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        if(count \u003d\u003d 1) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            throw new DukeException(noKeywords());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "            System.out.println(Global.PATTERNLINE );"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * The following method is to print out and send reply to acknowledge whenever user"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * perform these function -\u003e added new Task, set Done, delete Task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    static void replyLine(ArrayList\u003cTask\u003e tasks, String input, int count) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.print(Global.PATTERNLINE + \"\\nGot it. I\u0027ve added this task: \\n\\t\" );"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        tasks.get(count).printTask();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        count +\u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(\"Now you have \" + count + \" tasks in the list.\\n\" + Global.PATTERNLINE );"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void replyMarkedDone (ArrayList\u003cTask\u003e tasks, int index) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE + \"\\nNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        tasks.get(index-1).printTask();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void replyDeleteTask (ArrayList\u003cTask\u003e tasks, int index) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE + \"\\nNoted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        tasks.get(index-1).printTask();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(\"Now you have \" + (tasks.size()-1) + \" tasks in the list.\\n\" + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     * The following methods is to show Error Exception Throw at different scenarios"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void errIndexOutOfBoundsException(){"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE + \"\\nFriend, You do not have so much task in the list\\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static void errInvalidInput(Exception e){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(e + \"\\n\" + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //System.out.println(Global.PATTERNLINE + \"\\nYou have entered invalid input. Please re-input or \\n\" +"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //        \"Enter bye to terminate the program.\\n\" + Global.PATTERNLINE);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void showLoadingError() throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        System.out.println(Global.PATTERNLINE + \"File Not Found\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        throw new DukeException(\"No File\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static String deadlineErrEmpty() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String errorEmpty \u003d \"☹ OOPS!!! The description of a Deadlines cannot be empty.\\n \" +"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "                \"Please re-input or enter bye to terminate the program\\n\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return errorEmpty;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public static String deadlineNoBy () {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String errorMissing \u003d \"You have input your Schedule or Wrong format\\nPlease include -\u003e /by when\\n\";"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return errorMissing;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    private static String noKeywords() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String err \u003d \"No Tasks with Similar Keyword was found from the List\\n\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //System.out.println(err);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        return err;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 145
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import jdk.jfr.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import ui.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "import static junit.framework.Assert.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void duke() throws IOException, DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //String filePath \u003d \"ip/record.txt\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String command \u003d \"Todo Adding New\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        ArrayList\u003cTask\u003e expectedTasks \u003d new ArrayList\u003c\u003e ();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        expectedTasks.add(new ToDos(\"Adding New\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        ArrayList\u003cTask\u003e actualTasks \u003d new ArrayList\u003c\u003e ();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Parser parser \u003d new Parser(command);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        TaskList tasklist \u003d new TaskList(actualTasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        parser.processInput(command,actualTasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        actualTasks \u003d tasklist.getTasksArr();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(expectedTasks,actualTasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //String err \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //        \"Please re-input or enter bye to terminate the program\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "       // tasks.set(0, new parser.validateCommand(\"Testing\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //.input(new Scanner(this.getClass().getResourceAsStream(\"/input.txt\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //(Array.asList(\"Steel Man of\", \"Fast and Furious\","
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //        \"Day after Tomorrow The\", \"Man of Steel\", \"Tomorrow The Day after\", \"Furious Fast and\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //assertEquals(2,2);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    public void checkDeleteFunction() throws IOException, DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //String filePath \u003d \"record.txt\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //Duke duke \u003d new Duke(filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        ArrayList\u003cTask\u003e expectedTasks \u003d new ArrayList\u003c\u003e ();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        expectedTasks.add(new ToDos(\"Adding New One\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "       // expectedTasks.add(new Deadlines(\"Adding New Two\", \"2/12/2019\"));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        ArrayList\u003cTask\u003e actualTasks \u003d new ArrayList\u003c\u003e ();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String commandAdd \u003d \"Todo Adding New One\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String commandAdd2 \u003d \"Deadlines Adding New 2 /by 2/12/2019\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        String deleteCommand \u003d \"delete 2\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        Parser parser \u003d new Parser(commandAdd);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        TaskList tasklist \u003d new TaskList(actualTasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        parser.processInput(commandAdd,actualTasks);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        parser.processInput(commandAdd2, actualTasks);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        actualTasks \u003d tasklist.getTasksArr();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        parser.processInput(deleteCommand, actualTasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //expectedTasks.add(new ToDos(\"Adding Todo\"));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //expectedTasks.add(new Deadlines(\"Adding Deadlines\", \"2020\u003d08-21\"));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //expectedTasks.add(new Events(\"Adding Events\", \"2020-09-01\"));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //storage.createFile();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //ArrayList\u003cTask\u003e actualTasks \u003d new ArrayList\u003c\u003e ();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        //actualTasks \u003d storage.load();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "        assertEquals(expectedTasks,actualTasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 79
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "todo thinking"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "deadline adding new stuff /by 30 Apr"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "events attend meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "if ! javac -cp /Users/laiping/Documents/TIC4001/ip/src/main/java -Xlint:none -d /Users/laiping/Documents/TIC4001/ip/bin /Users/laiping/Documents/TIC4001/ip/src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "cp ./EXPECTED.TXT ./EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "dos2unix ./ACTUAL.TXT ./EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Chilaiping"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Chilaiping": 5,
      "-": 34
    }
  }
]
