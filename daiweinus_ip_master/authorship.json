[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.command.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Parser.run();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 6,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.Tasks;// Organize the classes into suitable duke.Tasks packages."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * entity deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param description tasks\u0027 description"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param by          tasks\u0027 deadline time"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return \"[D]\" + super.printDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 22
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return \"[E]\" + super.printDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 15
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public abstract String toString();// add abstract class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 29
    }
  },
  {
    "path": "src/main/java/duke/Tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return \"[T]\" + super.printDescription();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 12
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.Tasks.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    static TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    private static String commandWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Parser(String commandWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Parser.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static String getCommand(String fullCommand) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        commandWord \u003d fullCommand.trim().split(\" \")[0];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return commandWord;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static Todo createTodo(String line) throws TaskManagerException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String substring \u003d line.trim().substring(\"todo\".length());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d substring.trim();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            throw new TaskManagerException(\"Error: Empty description for TODO\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return new Todo(substring.trim());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static Deadline createDeadline(String line) throws TaskManagerException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d line.substring(\"deadline\".trim().length());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            throw new TaskManagerException(\"Error: Empty description for TODO\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if (!description.contains(\"/by\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            throw new TaskManagerException(\"☹ OOPS!!!: need \u0027/by\u0027 for DEADLINE\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return new Deadline(line.trim().substring(\"deadline\".length()).trim().split(\" /by\")[0],"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                line.trim().split(\"/by \")[1]);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static void run() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLogo();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                String commandWord \u003d Parser.getCommand(fullCommand);//convert command word to lowercase"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                switch (commandWord) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        ui.farewellUser();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        isExit \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.addTodo(fullCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.addDeadline(fullCommand);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.markAsDone(fullCommand);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.showTasks(fullCommand);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.addEvent(fullCommand);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        ui.printError();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            } catch (TaskManagerException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daiweinus": 84
    }
  },
  {
    "path": "src/main/java/duke/command/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.Tasks.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.Tasks.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.Tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void addTodo(String fullCommand) throws TaskManagerException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Todo t \u003d Parser.createTodo(fullCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"  \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void addDeadline(String fullCommand) throws TaskManagerException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Deadline t \u003d Parser.createDeadline(fullCommand);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"  \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void addEvent(String toAdd) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d toAdd.split(\" /at \")[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String at \u003d toAdd.split(\" /at \")[1];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"  \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void showTasks(String fullCommand) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printWord(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d fullCommand.trim().substring(\"list\".length()).trim();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                System.out.println((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } else try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            int index \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                System.out.println(\"[\" + (index) + \"] \" + tasks.get(index - 1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            } else System.out.println(\"☹ OOPS!!!Printing range should be 1 to \" + tasks.size());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            System.out.println(\"☹ OOPS!!!Print command should be ‘print\u0027 or \u0027print INTEGER\u0027\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void markAsDone(String fullCommand) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            int index \u003d Integer.parseInt(fullCommand.substring(\"done\".length()).trim());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            assert index \u003c\u003d tasks.size() : \"☹ OOPS!!!Command number is invalid\"; //assert error when index bigger than tasks size."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                tasks.get(index - 1).setDone(true);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                System.out.println(\"duke.Tasks: \" + index + \" has marked as DONE.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            } else System.out.println(\"☹ OOPS!!!Marking as done range should be 1 to \" + tasks.size());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            System.out.println(\"☹ OOPS!!!markAsDone command not Integer!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 81
    }
  },
  {
    "path": "src/main/java/duke/command/TaskManagerException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class TaskManagerException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public TaskManagerException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 7
    }
  },
  {
    "path": "src/main/java/duke/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command; // Organize the classes into suitable duke.command packages."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    private final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printWord(String toPrint) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(\" \" + toPrint);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String logo \u003d \"  __          __ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                + \"  | | ____    | | ____\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                + \"  | |/ __ \\\\   | |/ __ \\\\\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                + \"__/ | |__| |__/ | |__| |\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                + \"\\\\__/ \\\\____/ \\\\__/ \\\\____/\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printWord(\"Hi! I\u0027m Jojo ☺\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printWord(\"What can I do for you?\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void farewellUser() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printWord(\"Bye. Have a nice day!\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    // print out error message"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printError() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String command \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return command.toLowerCase();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printError(String message) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 54
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "deadline return book /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "-": 37
    }
  }
]
