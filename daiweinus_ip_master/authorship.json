[
  {
    "path": "Duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "T  | 0 | read"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 2,
      "-": 24
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "# Jojo User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Jojo, a Personal Assistant Chatbot with Java-based Command Line Interface (CLI), that helps users to keep track of various things. "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Quick Start"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "2. Download the latest ip.jar [here](https://github.com/daiweinus/ip/releases)."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "3. Open the Terminal/Command Prompt."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "4. Navigate to the projectâ€™s out\\artifacts\\ip_jar."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "5. Launch the Jojo Chatbot by running the command java -jar ip.jar."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "6. Type the command in the CLI program and press Enter to execute it.  "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "   Some example commands you can try:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "   + ` todo borrow book `"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "   + `deadline return book /by 2020-09-25`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "   + `event project meeting /at meeting room #1-12`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Adding a Todo task: todo"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Adding a Deadline task: deadline"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Adding an Event task: event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Listing all tasks: list"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Finding a tasks containing any keyword: find KEY_WORD"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Deleting a task : delete INDEX"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Marking as Done of a task: done INDEX"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Exiting the program : bye"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Saving the tasks to local: save"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Notes about the command format:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "+ Words in UPPER_CASE are the parameters to be supplied by the user.  "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  ` E.g. DESCRIPTION in the command todo DESCRIPTION. `"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 1: Adding a Todo task: todo "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Adds a Todo task in the list. ToDos: tasks without any date/time attached."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "todo Read book"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [T][âœ˜] borrow book"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 2: Adding a Deadline task: deadline"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Adds a Deadline task. Deadlines: tasks that need to be done before a specific date(yyyy-mm-dd)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "deadline return book /by 2020-09-25"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [D][âœ˜] return book (by: Sep 25 2020)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 3: Adding an Event task: event"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Adds an Event task. Events: tasks that start at a address."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "event project meeting /at meeting room #1-12"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [E][âœ˜] project meeting (at: meeting room #1-12)"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 4: Listing task information: list"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Lists all tasks in Jojo."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "list"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  1. [T][âœ˜] Read book"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  2. [D][âœ˜] return book (by: Sep 25 2020)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  3. [E][âœ˜] project meeting (at: meeting room #1-12)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 5: Finding tasks: find KEY_WORD"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Finds tasks in Jojo that match any of the specified keywords."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "find book"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Here are the matching tasks in your list:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  1. [T][âœ˜] Read book"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  2. [D][âœ˜] return book (by: Sep 25 2020)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 6: Deleting a task : delete INDEX"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Deletes the specified task in Duke."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  [D][âœ˜] return book (by: Sep 25 2020)"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 7: Deleting a task : delete INDEX"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Mark specified task as done."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "[âœ“] Read book"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 8: Exiting the program : bye"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "bye"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "## Feature 9: Saving the tasks to local: save"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Save the tasks in the hard disk automatically whenever the task list changes. Load the data from the hard disk when Duke starts up. "
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "save"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Tasks save to disk Jojo.txt"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "Hello from"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  __          __ "
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  | | ____    | | ____"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "  | |/ __ \\   | |/ __ \\"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "__/ | |__| |__/ | |__| |"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "\\__/ \\____/ \\__/ \\____/"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 162,
      "-": 15
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * This class implements simple Duke chatbot named Jojo,that can write, read and save"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * tasks in the assigned filePath."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * This Duke class contained 3 methods Duke ,run and main."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public TaskList tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Ui ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This constructs is TaskManager with a filePath,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This TaskManager try call save.readTaskFromFile to load tasks from filePath"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * and throw an exception if the file does not exist yet!"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param filePath duke command save file path"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Duke(String filePath)  {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            tasks \u003d new TaskList(storage.readTaskFromFile());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } catch (TaskException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            ui.showToUser(\"â˜¹ OOPS!!!folder does not exist yet!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        new Duke(\"Jojo.txt\").run();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This run method switch different duke command to different method."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLogo();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                String commandWord \u003d Parser.getCommand(fullCommand);//convert command word to lowercase"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                switch (commandWord) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        ui.farewellUser();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        isExit \u003d true;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.addTodo(fullCommand);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.addDeadline(fullCommand);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.markAsDone(fullCommand);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.showTasks(fullCommand);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.addEvent(fullCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.deleteTasks(fullCommand);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"find\":"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.findTasks(fullCommand);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    case \"save\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        tasks.saveTasks();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                        ui.printError();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            } catch (TaskException e) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 89,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *This Parser class is to parser users\u0027 command and create todo, deadline, event tasks."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    //public TaskList tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    private static String commandWord;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This constructs parser with command string"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param commandWord user command string"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Parser(String commandWord) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Parser.commandWord \u003d commandWord;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is get key command word from full command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param fullCommand tasks\u0027 full command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return tasks\u0027 commandWord"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static String getCommand(String fullCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        commandWord \u003d fullCommand.trim().split(\" \")[0];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return commandWord;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is create todo object in task arrarylist."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param line tasks\u0027 full command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return tasks\u0027 Todo"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @throws TaskException if empty description for todo can"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *                              throw this exception."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static Todo createTodo(String line) throws TaskException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String substring \u003d line.trim().substring(\"todo\".length());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d substring.trim();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            throw new TaskException(\"Error: Empty description for TODO\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return new Todo(substring.trim());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is create deadline object in task arraylist."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param line tasks\u0027 full command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return tasks\u0027 Deadline and by"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @throws TaskException if empty description for deadline and /by can"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *                              throw this exception."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static Deadline createDeadline(String line) throws TaskException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d line.substring(\"deadline\".trim().length());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            throw new TaskException(\"Error: Empty description for TODO\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if (!description.contains(\"/by\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            throw new TaskException(\"â˜¹ OOPS!!!: need \u0027/by\u0027 for DEADLINE\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return new Deadline(line.trim().substring(\"deadline\".length()).trim().split(\" /by\")[0],"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                line.trim().split(\"/by \")[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "daiweinus": 79
    }
  },
  {
    "path": "src/main/java/duke/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This constructs duke tasks with string filepath"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param filePath task save file path"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Storage.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is to save tasks in storage file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static void writeTaskToFile(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        File out \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(out))) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                   bw.append(\"D \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    bw.append(\"| \").append(task.isDone() ? \"1\" : \"0\").append(\" | \").append(task.getDescription()).append(\" | \").append(((Deadline) task).getBy());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    bw.append(\"E \");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    bw.append(\" | \").append(task.isDone() ? \"1\" : \"0\").append(\" | \").append(task.getDescription()).append(\" | \").append(((Event) task).getAt());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                } else if (task instanceof Todo) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    bw.append(\"T \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    bw.append(\" | \").append(task.isDone() ? \"1\" : \"0\").append(\" | \").append(task.getDescription());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                bw.append(System.lineSeparator());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(\"Tasks save to disk \" + filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is to read task from storage file line by line."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param filePath tasks\u0027 save filepath"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return tasks line by line"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public List\u003cString\u003e getLines(String filePath) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        try (BufferedReader br \u003d new BufferedReader(new FileReader(filePath))) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            for (String line; (line \u003d br.readLine()) !\u003d null; ) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                lines.add(line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                System.out.println(lines);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return lines;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * his function is to convert the line to a task and add to the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param line storage tasks line by line"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return task array list"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public static Task createTask(String line) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String type \u003d line.split(\"\\\\|\")[0].trim();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        boolean isDone \u003d line.split(\"\\\\|\")[1].trim().equals(\"1\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String desc \u003d line.split(\"\\\\|\")[2].trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                task \u003d new Todo(desc);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                task.setDone(isDone);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                String by \u003d line.split(\"\\\\|\")[3].trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                task \u003d new Deadline(desc, by);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                task.setDone(isDone);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                String at \u003d line.split(\"\\\\|\")[3].trim();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                task.setDone(isDone);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is to load tasks from storage file."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return loaded tasks"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @throws TaskException if problem reading file can throw this exception."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public List\u003cTask\u003e readTaskFromFile() throws TaskException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        List\u003cString\u003e lines \u003d getLines(filePath);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        for (String line : lines) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            if (line.trim().isEmpty()) { //ignore empty lines"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                throw new TaskException(\"â˜¹ OOPS!!!folder does not exist yet!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            loadedTasks.add(createTask(line)); //convert the line to a task and add to the list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 115
    }
  },
  {
    "path": "src/main/java/duke/command/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *This Exceptions class is to throw project run time error."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "// using A Exceptions to throw error"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class TaskException extends Exception {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public TaskException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 15
    }
  },
  {
    "path": "src/main/java/duke/command/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * This TaskList class to add Task,deadline, event in duke task list,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * and edit, delete the duke Task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    static Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    private List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(); //  Use Java Collections classes ArrayList\u003cTask\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This constructs a TaskList with a List\u003cTask\u003e parameter"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param tasks tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is to add todo."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param fullCommand tasks\u0027 full command"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @throws TaskException if create todo have error can throw this exception."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void addTodo(String fullCommand) throws TaskException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Todo t \u003d Parser.createTodo(fullCommand);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"  \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is to add deadline."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param fullCommand tasks\u0027 full command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @throws TaskException if create deadline have error can throw this exception."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void addDeadline(String fullCommand) throws TaskException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        Deadline t \u003d Parser.createDeadline(fullCommand);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"  \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *This function is to add event."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param toAdd tasks\u0027 full command"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void addEvent(String toAdd) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d toAdd.split(\" /at \")[0];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String at \u003d toAdd.split(\" /at \")[1];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        tasks.add(new Event(description, at));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"  \" + tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *This function is to print tasks."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param fullCommand tasks\u0027 full command"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void showTasks(String fullCommand) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.showToUser(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d fullCommand.trim().substring(\"list\".length()).trim();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if (description.isEmpty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                System.out.println((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } else try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            int index \u003d Integer.parseInt(description);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                ui.showToUser(\"[\" + (index) + \"] \" + tasks.get(index - 1));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            } else System.out.println(\"â˜¹ OOPS!!!Printing range should be 1 to \" + tasks.size());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            ui.showToUser(\"â˜¹ OOPS!!!Print command should be â€˜print\u0027 or \u0027print INTEGER\u0027\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *This function is to mark tasks as done."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param fullCommand tasks\u0027 full command"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void markAsDone(String fullCommand) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            int index \u003d Integer.parseInt(fullCommand.substring(\"done\".length()).trim());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            assert index \u003c\u003d tasks.size() : \"â˜¹ OOPS!!!Command number is invalid\"; //assert error when index bigger than tasks size."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                tasks.get(index - 1).setDone(true);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                ui.showToUser(\"Tasks: \" + index + \" has marked as DONE.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            } else ui.showToUser(\"â˜¹ OOPS!!!Marking as done range should be 1 to \" + tasks.size());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            ui.showToUser(\"â˜¹ OOPS!!!markAsDone command not Integer!\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *This function is to deleted tasks from task list."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param fullCommand tasks\u0027 full command"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void deleteTasks(String fullCommand) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            int index \u003d Integer.parseInt(fullCommand.substring(\"delete\".length()).trim());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            if (index \u003c\u003d tasks.size() \u0026\u0026 index \u003e 0) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                ui.showToUser(\"Noted. I\u0027ve removed this task: \\n\" + \"  \" + tasks.get(index-1));"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                tasks.remove(index - 1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                ui.showToUser(\"Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                ui.printLine();"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            } else ui.showToUser(\"â˜¹ OOPS!!!:Deleting range should be 1 to \" + tasks.size());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            ui.showToUser(\"â˜¹ OOPS!!!:Deleted command not Integer!\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *This function is to call saveTasks method to save tasks in user driver."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void saveTasks() { Storage.writeTaskToFile(tasks); }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is to find tasks from task list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param fullCommand tasks\u0027 full command"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void findTasks(String fullCommand) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        List\u003cString\u003e ss \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String description \u003d fullCommand.trim().substring(\"find\".length()).trim();"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                String s \u003d tasks.get(i).toString();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                if (s.contains(description)) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                    ss.add(i+1 + \".\" + s );"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        if(ss.size() !\u003d 0) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            ui.showToUser(\"Here are the matching tasks in your list: \");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            ss.forEach(System.out::println);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "            ui.showToUser(\"â˜¹ OOPS!!! Our list not contain \" + \"\u0027\" + description + \"\u0027.\");"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        ui.printLine();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 175
    }
  },
  {
    "path": "src/main/java/duke/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command; // Organize the classes into suitable duke.command packages."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *This Ui class is to read user command and print duke logo \u0026 error."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    private final Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * print a line ro separate the chat text"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printLine() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * print the duke chatbot logo"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printLogo() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String logo \u003d \"  __          __ \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                + \"  | | ____    | | ____\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                + \"  | |/ __ \\\\   | |/ __ \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                + \"__/ | |__| |__/ | |__| |\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "                + \"\\\\__/ \\\\____/ \\\\__/ \\\\____/\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * print duke duke chatbot welcome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        showToUser(\"Hi! I\u0027m Jojo â˜º\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        showToUser(\"What can I do for you?\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * print duke chatbot farewell to user"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void farewellUser() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        showToUser(\"Bye. Have a nice day!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        printLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * print out error message"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printError() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(\"â˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * help chatbot print message to user"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param s string"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void showToUser(String s) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * read the user command"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return user command with lowercase"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        String command \u003d in.nextLine().trim();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return command.toLowerCase();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * help chatbot print program error message"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param message string"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void printError(String message) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 91
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.task;// Organize the classes into suitable duke.Tasks packages."
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * This Deadline class extends from task object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *convert data string to except format"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param startDate data/time string with yyyy-MM-dd format"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return  data/time string with MMM d yyyy format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String getStartDate(String startDate)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        DateTimeFormatter outputFormat \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return LocalDate.parse(startDate, inputFormat).format(outputFormat);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * entity deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param description tasks\u0027 description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param by          tasks\u0027 deadline time"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        //this.by \u003d by;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.by \u003d  getStartDate(by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * get user command description of by"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return by"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return by;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * override the to string method"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return user command Deadline to \"[D]\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return \"[D]\" + super.printDescription() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 61
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * This Event class extends from task object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * entity Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param description tasks\u0027 description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param at          tasks\u0027 event time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * get user command description of at"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return at"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return at;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * override the to string method"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return user event Deadline to \"[E]\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return \"[E]\" + super.printDescription() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * This class to create task object."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * entity task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This function is get done or noe statues icon symbols"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return tick or X symbols"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This constructs s setDone with is done"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param isDone set status done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * This constructs return description"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return user command description"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * Abstarct the toString method"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return void"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public abstract String toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * print the user command with status icon"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return user command with status icon"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String printDescription() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + getDescription();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * set user command to isDone"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return user command status"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 76
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * This class extends from task object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @author Dai Wei"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @version Finial version 2020.9.9"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " * @since Duke javadoc"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * entity Todo."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @param description users\u0027 tasks\u0027 description"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * override the to string method"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     * @return user command todo to \"[T]\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        return \"[T]\" + super.printDescription();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 30
    }
  },
  {
    "path": "test/java/duke/command/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void getCommandWord() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        assertEquals(\"todo\", Parser.getCommand(\"todo read book\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        assertEquals(\"deadline\", Parser.getCommand(\"deadline return book /by next Friday\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        assertEquals(\"exit\", Parser.getCommand(\"exit\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 14
    }
  },
  {
    "path": "test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        assertEquals(\"[D][âœ˜] 111 (by: Sep 18 2020)\" , new Deadline(\"111\", \"2020-09-18\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 12
    }
  },
  {
    "path": "test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "daiweinus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "        assertEquals(\"[E][âœ˜] project meeting (at: meeting room #1-2)\" , new Event(\"project meeting\", \"meeting room #1-2\").toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 13
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "deadline return book /by today"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "daiweinus"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "daiweinus": 1,
      "-": 37
    }
  }
]
